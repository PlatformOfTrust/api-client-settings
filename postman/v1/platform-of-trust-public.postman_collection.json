{
	"info": {
		"_postman_id": "ecccaec2-9410-4466-99c1-5e755a58c588",
		"name": "Platform of Trust - Public APIs v1.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Manage Group",
			"item": [
				{
					"name": "Create Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"context\": \"https://standards.oftrust.net/v2/Context/Identity/Group/\",\r\n\t\"type\": \"Group\",\r\n\t\"data\": {\r\n\t\t\"name\": \"DemoGroup\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/identities/v1",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"identities",
								"v1"
							]
						},
						"description": "Create Group request"
					},
					"response": []
				},
				{
					"name": "Create MemeberOf Link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"context\": \"https://standards.oftrust.net/v2/Context/Link/Role/MemberOf/\",\r\n\t\"type\": \"MemberOf\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/identities/v1/:from/link/:to",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"identities",
								"v1",
								":from",
								"link",
								":to"
							],
							"variable": [
								{
									"key": "from",
									"value": "TODO",
									"description": "User Identity"
								},
								{
									"key": "to",
									"value": "TODO",
									"description": "Group Identity"
								}
							]
						},
						"description": "Create MemberOf Link between a group and the acting user"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Application API",
			"item": [
				{
					"name": "Create Application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"groupId\": \"{{group_id}}\",\r\n\t\"redirectUris\": \"http://foo.bar\",\r\n\t\"defaultScopes\": \"\",\r\n\t\"privacyPolicyUrl\": \"http://foo.bar\",\r\n\t\"name\": \"test\",\r\n\t\"webPageUrl\": \"https://foo.bar\",\r\n\t\"scopes\": \"\",\r\n\t\"defaultRedirectUri\": \"http://foo.bar\",\r\n\t\"description\": \"\",\r\n\t\"iconUrl\": \"http://foo.bar\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/apps/v1",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"apps",
								"v1"
							]
						},
						"description": "\"Create Application\" request - POST"
					},
					"response": []
				},
				{
					"name": "Get Application",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pot_base_url}}/apps/v1/:applicationId",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"apps",
								"v1",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "TODO"
								}
							]
						},
						"description": "\"Get Application\" request (one entry) - GET"
					},
					"response": []
				},
				{
					"name": "List Applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pot_base_url}}/apps/v1",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"apps",
								"v1"
							]
						},
						"description": "\"List Applications\" request - GET"
					},
					"response": []
				},
				{
					"name": "Update Application",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"Example Application\",\r\n\t\"description\": \"Application description\",\r\n\t\"privacyPolicyUrl\": \"http://example.com/privacy.html\",\r\n\t\"webPageUrl\": \"http://example.com/application.html\",\r\n\t\"iconUrl\": \"http://example.com/icon.png\",\r\n\t\"scopes\": \"\",\r\n\t\"defaultScopes\": \"\",\r\n\t\"redirectUris\": \"https://example.com/auth-callback\",\r\n\t\"defaultRedirectUri\": \"https://example.com/auth-callback\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/apps/v1/:applicationId",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"apps",
								"v1",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "TODO"
								}
							]
						},
						"description": "\"Update Application\" request (one entry) - PUT"
					},
					"response": []
				},
				{
					"name": "Delete Application",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pot_base_url}}/apps/v1/:applicationId",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"apps",
								"v1",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "TODO"
								}
							]
						},
						"description": "\"Delete Application\" (one entry) request - DELETE"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product API V1",
			"item": [
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"productCode\": \"{{product_code}}\",\r\n\t\"dataContext\": \"https://standards.oftrust.net/v2/Context/DataProductOutput/Sensor/\",\r\n\t\"parameterContext\": \"https://standards.oftrust.net/v2/Context/DataProductParameters/Sensor/\",\r\n\t\"groupId\": \"{{group_id}}\",\r\n\t\"translatorUrl\": \"{{dummy_translator_base_url}}/dummy-translator/v1/fetch\",\r\n\t\"name\": \"Product Dummy-Test\",\r\n\t\"organizationPublicKeys\": [\r\n\t\t{\r\n\t\t\t\"url\": \"{{dummy_translator_base_url}}/dummy-translator/v1/public.key\",\r\n\t\t\t\"type\": \"RsaSignature2018\"\r\n\t\t}\r\n\t],\r\n\t\"imageUrl\": null,\r\n\t\"description\": \"Dummy translator example\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/products/v1",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"products",
								"v1"
							]
						},
						"description": "Create Product V1"
					},
					"response": []
				},
				{
					"name": "Get Product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/products/v1/:productCode",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"products",
								"v1",
								":productCode"
							],
							"variable": [
								{
									"key": "productCode",
									"value": "{{product_code}}"
								}
							]
						},
						"description": "Get Product V1"
					},
					"response": []
				},
				{
					"name": "List Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/products/v1",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"products",
								"v1"
							]
						},
						"description": "List Products V1"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"dataContext\": \"https://standards.oftrust.net/v2/Context/DataProductOutput/Sensor/\",\r\n\t\"parameterContext\": \"https://standards.oftrust.net/v2/Context/DataProductParameters/Sensor/\",\r\n\t\"translatorUrl\": \"{{dummy_translator_base_url}}/dummy-translator/v1/fetch\",\r\n\t\"name\": \"ProductSE-test\",\r\n\t\"organizationPublicKeys\": [\r\n\t\t{\r\n\t\t\t\"url\": \"{{dummy_translator_base_url}}/dummy-translator/v1/public.key\",\r\n\t\t\t\"type\": \"RsaSignature2018\"\r\n\t\t}\r\n\t],\r\n\t\"description\": \"SE translator example updated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/products/v1/:productCode",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"products",
								"v1",
								":productCode"
							],
							"variable": [
								{
									"key": "productCode",
									"value": "{{product_code}}"
								}
							]
						},
						"description": "Update Application V1"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearer_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pot_base_url}}/products/v1/:productCode",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"products",
								"v1",
								":productCode"
							],
							"variable": [
								{
									"key": "productCode",
									"value": "{{product_code}}"
								}
							]
						},
						"description": "Delete Product V1"
					},
					"response": []
				},
				{
					"name": "Fetch Product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "49a0329e-b526-4d49-b2ba-8f2578ee1eff",
								"exec": [
									"// Create timestamp for request body",
									"var date = (new Date()).toISOString()",
									"pm.globals.set(\"date\", date);",
									"",
									"// Parse requestbody ",
									"var requestBody = pm.variables.replaceIn(pm.request.body.raw)",
									"requestBody = JSON.parse(requestBody)",
									"",
									"// Generating X-Pot-Signature",
									"const clientSecret = pm.environment.get(\"client_secret\")",
									"var bodyString = JSON.stringify(sortObject(requestBody))",
									"bodyString = bodyString.replace(/([^\\\\](\\\\\\\\)*\"):/g, '$1: ');",
									"bodyString = bodyString.replace(/[\\u007F-\\uFFFF]/g, (chr) => {",
									"return \"\\\\u\" + (\"0000\" + chr.charCodeAt(0).toString(16)).substr(-4)",
									"});",
									"",
									"function sortObject(unordered, sortArrays = false) {",
									"    if (!unordered || typeof unordered !== 'object') {",
									"        return unordered;",
									"    }",
									"",
									"    if (Array.isArray(unordered)) {",
									"        const newArr = unordered.map((item) => sortObject(item, sortArrays));",
									"        if (sortArrays) {",
									"        newArr.sort();",
									"        }",
									"        return newArr;",
									"    }",
									"",
									"    const ordered = {};",
									"    Object.keys(unordered)",
									"        .sort()",
									"        .forEach((key) => {",
									"        ordered[key] = sortObject(unordered[key], sortArrays);",
									"        });",
									"    return ordered;",
									"}",
									"",
									"var hmac = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, clientSecret);",
									"hmac.update(bodyString)",
									"var hash = hmac.finalize();",
									"var base64 = CryptoJS.enc.Base64.stringify(hash);",
									"pm.environment.set(\"x_pot_signature_script_calculated\", base64);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "787b3da8-4079-46f5-b30c-8bf9a30dd122",
								"exec": [
									"// Clear variables",
									"pm.globals.unset(\"date\");",
									"pm.environment.unset(\"x_pot_signature_script_calculated\");",
									"console.log(request)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required)",
								"key": "X-Pot-Signature",
								"value": "{{x_pot_signature_script_calculated}}"
							},
							{
								"description": "(Required) The requesting app's JWT token. The token is generated when the app is created.",
								"key": "X-App-Token",
								"value": "{{x-app-token}}"
							},
							{
								"description": "Platform of Trust OAuth bearer token of the user currently logged in in his application. This is not mandatory, but if passed, the token will be verified.",
								"key": "X-User-Token",
								"value": "{{x-user-token}}",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": \"https://standards.oftrust.net/v2/Context/DataProductParameters/Sensor/\",\n  \"timestamp\": \"{{date}}\",\n  \"productCode\": \"{{product_code}}\",\n  \"parameters\": {\n    \"ids\": [\n      {\n        \"id\": \"id\"\n      }\n    ],\n    \"startTime\": \"2020-12-01T14:40:00.801Z\",\n    \"endTime\": \"2020-12-02T14:40:08.310Z\",\n    \"dataTypes\": [\n      \"MeasureAirTemperatureCelsiusDegree\"\n      ]\n  }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/broker/{{version}}/fetch-data-product",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"broker",
								"{{version}}",
								"fetch-data-product"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9a3be360-89fc-4135-93b4-d8e29ac88122",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "37695f15-cb87-45ff-b9b5-6b8a05de679b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}