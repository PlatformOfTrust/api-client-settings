{
	"info": {
		"_postman_id": "e099d673-68aa-460b-94b8-8bb9263a5937",
		"name": "Platform Of Trust v2 APIs",
		"description": "Collection for managining PoT v2 APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Products v2 API",
			"item": [
				{
					"name": "Products",
					"item": [
						{
							"name": "DataProduct",
							"item": [
								{
									"name": "List all data products",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"description": "Optional Authorization. Required to discover private and organization level products.",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}?type=dataproduct",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											],
											"query": [
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset of a query. Must be at least 0",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit the result of a query. Must be between 1 and 100",
													"disabled": true
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "Query parameter to filter by name and description data",
													"disabled": true
												},
												{
													"key": "type",
													"value": "dataproduct",
													"description": "The type of products to be returned"
												},
												{
													"key": "visibility",
													"value": "<string>",
													"description": "Visibility of the products to be listed (public, private, organization)",
													"disabled": true
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Create data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productCode\": \"<string>\",\n    \"type\": \"dataproduct\",\n    \"name\": \"<string>\",\n    \"publisherOrganizationId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"imageUrl\": \"<uri>\",\n    \"dataSources\": [\n        {\n            \"dataSourceId\": \"<uuid>\",\n            \"parameterContext\": \"<uri>\",\n            \"transformerIds\": [\n                \"uuid\"\n            ]\n        }\n    ],\n    \"termsAndConditionsId\": \"<uuid>\",\n    \"industries\": \"string\",\n    \"visibility\": {\n        \"type\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"publisherOrganizationId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"imageUrl\": \"<uri>\",\n    \"dataSources\": [\n        {\n            \"dataSourceId\": \"<uuid>\",\n            \"parameterContext\": \"<uri>\",\n            \"transformerIds\": [\n                \"uuid\"\n            ]\n        }\n    ],\n    \"termsAndConditionsId\": \"<uuid>\",\n    \"industries\": \"string\",\n    \"visibility\": {\n        \"type\": \"string\",\n        \"visibleTo\": [\n            \"uuid\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Manage product of type DataProduct"
						},
						{
							"name": "Connector",
							"item": [
								{
									"name": "List all connectors",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}?type=connector",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											],
											"query": [
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset of a query. Must be at least 0",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit the result of a query. Must be between 1 and 100",
													"disabled": true
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "Query parameter to filter by name and description data",
													"disabled": true
												},
												{
													"key": "type",
													"value": "connector",
													"description": "The type of products to be returned"
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Create connector",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productCode\": \"<string>\",\n    \"type\": \"connector\",\n    \"name\": \"<string>\",\n    \"publisherOrganizationId\": \"<uuid>\",\n    \"parameterContext\": \"<uri>\",\n    \"supportedSystemId\": \"<uuid>\",\n    \"contactPersonId\": \"<uuid>\",\n    \"contactPersonName\": \"<string>\",\n    \"contactPersonEmail\": \"<string>\",\n    \"connectorInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update connector",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"publisherOrganizationId\": \"<uuid>\",\n    \"parameterContext\": \"<uri>\",\n    \"supportedSystemId\": \"<uuid>\",\n    \"contactPersonId\": \"<uuid>\",\n    \"contactPersonName\": \"<string>\",\n    \"contactPersonEmail\": \"<string>\",\n    \"connectorInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Manage product type of Connector"
						},
						{
							"name": "Transformer",
							"item": [
								{
									"name": "List all transformers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}?type=transformer",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											],
											"query": [
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset of a query. Must be at least 0",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit the result of a query. Must be between 1 and 100",
													"disabled": true
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "Query parameter to filter by name and description data",
													"disabled": true
												},
												{
													"key": "type",
													"value": "transformer",
													"description": "The type of products to be returned"
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Create transformer",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productCode\": \"<string>\",\n    \"type\": \"transformer\",\n    \"name\": \"<string>\",\n    \"publisherOrganizationId\": \"<uuid>\",\n    \"connectorId\": \"<uuid>\",\n    \"inputFormat\": \"<uri>\",\n    \"outputFormat\": \"<uri>\",\n    \"transformerInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update transformer",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"publisherOrganizationId\": \"<uuid>\",\n    \"connectorId\": \"<uuid>\",\n    \"inputFormat\": \"<uri>\",\n    \"outputFormat\": \"<uri>\",\n    \"transformerInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Manage product type of Transformer"
						},
						{
							"name": "DataSource",
							"item": [
								{
									"name": "List all data sources",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}?type=datasource",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											],
											"query": [
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset of a query. Must be at least 0",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit the result of a query. Must be between 1 and 100",
													"disabled": true
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "Query parameter to filter by name and description data",
													"disabled": true
												},
												{
													"key": "type",
													"value": "datasource",
													"description": "The type of products to be returned"
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Create data source",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productCode\": \"<string>\",\n    \"type\": \"datasource\",\n    \"name\": \"<string>\",\n    \"publisherOrganizationId\": \"<uuid>\",\n    \"connectorId\": \"<uuid>\",\n    \"transformerIds\": [\n        \"<uuid>\"\n    ],\n    \"ownerId\": \"<uuid>\",\n    \"ownerName\": \"<string>\",\n    \"protocol\": \"<string>\",\n    \"authType\": \"<string>\",\n    \"accessPoint\": \"<uri>\",\n    \"dataSheetId\": \"<uuid>\",\n    \"licenseInformationId\": \"<uuid>\",\n    \"behindVpn\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update data source",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"publisherOrganizationId\": \"<uuid>\",\n    \"connectorId\": \"<uuid>\",\n    \"transformerIds\": [\n        \"<uuid>\"\n    ],\n    \"ownerId\": \"<uuid>\",\n    \"ownerName\": \"<string>\",\n    \"protocol\": \"<string>\",\n    \"authType\": \"<string>\",\n    \"accessPoint\": \"<uri>\",\n    \"dataSheetId\": \"<uuid>\",\n    \"licenseInformationId\": \"<uuid>\",\n    \"behindVpn\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Manage product type of Data Source"
						},
						{
							"name": "List all products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer_token}}",
										"description": "Optional Authorization. Required to discover private and organization level products.",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset of a query. Must be at least 0",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit the result of a query. Must be between 1 and 100",
											"disabled": true
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Query parameter to filter by name and description data",
											"disabled": true
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "The type of products to be returned (dataproduct, datasource, connector, transformer)",
											"disabled": true
										},
										{
											"key": "visibility",
											"value": "<string>",
											"description": "Visibility of the products to be listed (public, private, organization)",
											"disabled": true
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "Get one product by product code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset of a query. Must be at least 0",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit the result of a query. Must be between 1 and 100",
											"disabled": true
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Query parameter to filter by name and description data",
											"disabled": true
										},
										{
											"key": "type",
											"value": "connector",
											"description": "The type of products to be returned",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "productCode",
											"value": "<string>",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "Delete product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "<string>",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "Fetch data a.k.a Broker API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Create timestamp for request body",
											"var date = (new Date()).toISOString()",
											"pm.globals.set(\"date\", date);",
											"",
											"// Parse requestbody ",
											"var requestBody = pm.variables.replaceIn(pm.request.body.raw)",
											"requestBody = JSON.parse(requestBody)",
											"",
											"// Generating X-Pot-Signature",
											"const clientSecret = pm.environment.get(\"client_secret\")",
											"const bodyString = JSON.stringify(sortObject(requestBody))",
											"",
											"function sortObject(unordered, sortArrays = false) {",
											"    if (!unordered || typeof unordered !== 'object') {",
											"        return unordered;",
											"    }",
											"",
											"    if (Array.isArray(unordered)) {",
											"        const newArr = unordered.map((item) => sortObject(item, sortArrays));",
											"        if (sortArrays) {",
											"        newArr.sort();",
											"        }",
											"        return newArr;",
											"    }",
											"",
											"    const ordered = {};",
											"    Object.keys(unordered)",
											"        .sort()",
											"        .forEach((key) => {",
											"        ordered[key] = sortObject(unordered[key], sortArrays);",
											"        });",
											"    return ordered;",
											"}",
											"",
											"var hmac = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, clientSecret);",
											"hmac.update(bodyString)",
											"var hash = hmac.finalize();",
											"var base64 = CryptoJS.enc.Base64.stringify(hash);",
											"pm.environment.set(\"x_pot_signature_script_calculated\", base64);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Clear variables",
											"pm.globals.unset(\"date\");",
											"pm.environment.unset(\"x_pot_signature_script_calculated\");",
											"console.log(request)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) NOTE!: Signature generation was changed since v1\n\nA HMAC-SHA256 signature in `base64` encoded format. The signature is created from the request payload and the app's client secret.\n\nE.g. based on following parameters\n\n```\nbody = {\n    \"key\": \"valüe\",\n    \"key2\": {\n        \"name\": \"Jåhn Gätes\",\n        \"address\": \"Test Street\",\n        \"colors\": [\"Red\", \"Blue\"]\n    }\n}\nsecret = \"topSecret\"\n```\n\nit will always generate the following signature if done correctly, regardless of technology used.\n\n```\n7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nPython example:\n\n```\nimport base64\nimport hashlib\nimport hmac\nimport json\n\nbody = {\n    \"key\": \"valüe\",\n    \"key2\": {\n        \"name\": \"Jåhn Gätes\",\n        \"address\": \"Test Street\",\n        \"colors\": [\"Red\", \"Blue\"]\n    }\n}\nclient_secret = \"topSecret\"\n\nbody_string = json.dumps(\n    body,\n    sort_keys=True,\n    ensure_ascii=False,\n    separators=(\",\", \":\")\n)\n\ndigest = hmac.new(\n    client_secret.encode(\"utf-8\"),\n    body_string.encode(\"utf-8\"),\n    hashlib.sha256\n).digest()\n\n# return the digest in base64 encoded format:\nsignature = base64.b64encode(digest).decode()\n\nprint(signature)  # 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nLet's explain once which parameters to use to generate correct `body_string`. \n`sort_keys=True` means that the output of dictionaries will be sorted by keys, `separators=(',', ':')` means there is no spaces between separators. `ensure_ascii=False` is used to keep non-ASCII characters as-is rather than escaping them; e.g. keep \"åäö\" rather than escaping to \"\\\\u00e5\\\\u00e4\\\\u00f6\".\n\nJavaScript example:\n\n```\nconst jsSHA = require(\"jssha\");\nconst stringify = require(\"json-stable-stringify\");\n\nconst body = {\n  \"key\": \"valüe\",\n  \"key2\": {\n    \"name\": \"Jåhn Gätes\",\n    \"address\": \"Test Street\",\n    \"colors\": [\"Red\", \"Blue\"]\n  }\n};\n\nconst clientSecret = \"client_secret\";\n\n// Sort keys and stringify.\n// Note \"json-stable-stringify\" is used\nconst bodyString = stringify(body);\n\nconst shaObj = new jsSHA(\n  \"SHA-256\", \n  \"TEXT\", \n  { encoding: \"UTF8\" }\n);\n\nshaObj.setHMACKey(clientSecret, \"TEXT\");\nshaObj.update(bodyString);\n\n// Signature in base64 to use in request\nconst signature = shaObj.getHMAC(\"B64\");\n\nconsole.log(signature) // 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nPHP example:\n\n```\n<?php\n\nfunction ksortRecursive(&$array) {\n    if (is_array($array)) {\n        ksort($array);\n        foreach ($array as &$arr) {\n            ksortRecursive($arr);\n        }\n    }\n}\n\n$body = array(\n  \"key\" => \"valüe\",\n  \"key2\" => array(\n    \"name\" => \"Jåhn Gätes\",\n    \"address\" => \"Test Street\",\n    \"colors\" => array(\"Red\", \"Blue\")\n  )\n);\n\n$client_secret = \"topSecret\";\n\nksortRecursive($body);\n\n$body_string = json_encode(\n   $body,   \n   JSON_UNESCAPED_UNICODE\n);\n\n$signature = base64_encode(\n  hash_hmac(\n    'sha256',\n        $body_string,\n        $client_secret,\n        true\n  )\n);\n\necho($signature . \"\\n\"); # 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n",
										"key": "X-Pot-Signature",
										"value": "{{x_pot_signature_script_calculated}}"
									},
									{
										"description": "(Required) The requesting app's JWT token. The token is generated when the app is created.",
										"key": "X-App-Token",
										"value": "{{x-app-token}}"
									},
									{
										"description": "Platform of Trust OAuth bearer token of the user currently logged in in his application. This is not mandatory, but if passed, the token will be verified.",
										"key": "X-User-Token",
										"value": "{{x-user-token}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": \"https://standards.oftrust.net/v2/Context/DataProductParameters/Sensor/\",\n    \"timestamp\": \"{{date}}\",\n    \"parameters\": {\n       \"ids\": [{\n                \"id\": \"1\"\n            }],\n        \"startTime\": \"2020-04-20T13:06:40+00:00\",\n        \"endTime\": \"2020-05-20T14:53:54+00:00\",\n        \"dataTypes\": [\"MeasureAirHumidity\"]\n    },\n    \"authCredentials\": {}\n}"
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/fetch",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"fetch"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "<string>"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Credentials",
					"item": [
						{
							"name": "Create custom credentials for the current data product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create data product returns 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Indicate the media type of the resource.",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"api-key\",\n  \"key\": \"x-api-key\",\n  \"value\": \"abcdef12345\",\n  \"position\": \"header\"\n}"
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "<string>",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update credential for the current data product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create data product returns 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Indicate the media type of the resource.",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"x-api-key\",\n  \"value\": \"abcdef12345\",\n  \"position\": \"header\"\n}"
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/:credentialType",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										":credentialType"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "<string>",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										},
										{
											"key": "credentialType",
											"value": "<stging>",
											"description": "Types of the credentials. Used to identify credential"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete credential for the current data product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create data product returns 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "Indicate the media type of the resource.",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/:credentialType",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										":credentialType"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "<string>",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										},
										{
											"key": "credentialType",
											"value": "<stging>",
											"description": "Types of the credentials. Used to identify credential"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract and conditions",
					"item": [
						{
							"name": "Contract",
							"item": [
								{
									"name": "List all contracts for the current data product",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/contract",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"contract"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create contract for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"Please read this contract and conditions carefully before using the Data Product\"\n  },\n  \"definitions\": {\n    \"formatType\": \"html\",\n    \"content\": \"<p><strong>GDPR</strong> -&nbsp;The General Data Protection Regulation 2016/679 is a regulation in EU law on data protection and privacy in the European Union and the European Economic Area </p>  <p> <strong>Data Subject</strong> -&nbsp;A data subject is an end user whose personal data can be collected </p>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/contract",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"contract"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get single contract for the current data product by id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/contract/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"contract",
												":id"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the contract"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update contract for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"Please read this contract and conditions carefully before using the Data Product\"\n  },\n  \"definitions\": {\n    \"formatType\": \"html\",\n    \"content\": \"<p><strong>GDPR</strong> -&nbsp;The General Data Protection Regulation 2016/679 is a regulation in EU law on data protection and privacy in the European Union and the European Economic Area </p>  <p> <strong>Data Subject</strong> -&nbsp;A data subject is an end user whose personal data can be collected </p>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/contract/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"contract",
												":id"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the contract"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contract for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/contract/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"contract",
												":id"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the contract"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Conditions",
							"item": [
								{
									"name": "Condition types",
									"item": [
										{
											"name": "List all condition types supported by the system",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/product-condition-types",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														"product-condition-types"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get one condition type by id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/product-condition-types/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														"product-condition-types",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the condition type"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "List all conditions for the current data product",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"conditions"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create condition for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contractId\": \"dbf32426-cf38-4818-9c6e-3230d889fa51\",\n  \"productConditionTypeId\": \"b4c99f01-5cde-4169-9ab7-04470b97bbec\",\n  \"name\": \"Consent from Data Publisher\",\n  \"description\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"Consent from Data Publiser is required\"\n  },\n  \"valueSet\": {\n    \"supported\": false\n  },\n  \"geographicalLimitation\": {\n    \"supported\": false\n  },\n  \"consent\": {\n    \"required\": true,\n    \"selectedChannel\": \"PlatformOfTrust\",\n    \"selectedPartyRole\": \"datapublisher\",\n    \"party\": {}\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"conditions"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get single condition for the current data product by id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"conditions",
												":id"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the condition"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update condition for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Consent from Data Publisher\",\n  \"description\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"Consent from Data Publiser is required\"\n  },\n  \"valueSet\": {\n    \"supported\": false\n  },\n  \"geographicalLimitation\": {\n    \"supported\": false\n  },\n  \"consent\": {\n    \"required\": true,\n    \"selectedChannel\": \"PlatformOfTrust\",\n    \"selectedPartyRole\": \"datasubject\",\n    \"party\": {}\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"conditions",
												":id"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the condition"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete condition for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"conditions",
												":id"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "<string>",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the condition"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Permissions and user terms",
					"item": [
						{
							"name": "Permission Stack",
							"item": [
								{
									"name": "List all permission stacks for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/permissions",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"permissions"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<uuid>",
													"description": "Unique identifier of internal user (consumer)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										},
										"description": "Get all permission stacks or use query parameter user_id to ger permission stacks related to specific user"
									},
									"response": []
								},
								{
									"name": "TEMPORARY Create permission stack for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"consumerUserId\": \"d142d40c-0e10-11eb-adc1-0242ac120002\",\n    \"consumerOrganizationId\": \"0528e417-e37d-404d-b24d-89ee1a0e5b33\",\n    \"state\": \"approved\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/permissions",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"permissions"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										},
										"description": "Create permission stack (Temporary endpoint)"
									},
									"response": []
								},
								{
									"name": "Get one permission stack for the current data product by id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/permissions/:permissionId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"permissions",
												":permissionId"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "permissionId",
													"value": "example-id",
													"description": "(Required) Unique identifier of  permission stack"
												}
											]
										},
										"description": "Get one permission stacks by permission id"
									},
									"response": []
								},
								{
									"name": "TEMPORARY Update permission stack for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"not approved\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/permissions/:permissionId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"permissions",
												":permissionId"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "permissionId",
													"value": "example-id",
													"description": "(Required) Unique identifier of  permission stack"
												}
											]
										},
										"description": "Update permission stack state"
									},
									"response": []
								},
								{
									"name": "TEMPORARY Delete permission stack for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"approved\": \"not approved\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/permissions/:permissionId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"permissions",
												":permissionId"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "permissionId",
													"value": "example-id",
													"description": "(Required) Unique identifier of  permission stack"
												}
											]
										},
										"description": "Delete permission stack"
									},
									"response": []
								}
							]
						},
						{
							"name": "User Terms",
							"item": [
								{
									"name": "List all user terms for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/user-terms",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"user-terms"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<uuid>",
													"description": "Unique identifier of internal user (consumer)",
													"disabled": true
												},
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "By default some of the models are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response (condition, condition-type, permission-request)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "TEMPORARY Create user term for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conditionId\": \"0315e748-28ac-11eb-adc1-0242ac120002\",\n  \"acceptedByUser\": true,\n  \"dataProductPublisherId\": \"d5330112-c0dd-44cf-aea1-4bf786eccb52\",\n  \"consumerUserId\": \"dc58a83e-28ab-11eb-adc1-0242ac120002\",\n  \"consumerOrganizationId\": \"0528e417-e37d-404d-b24d-89ee1a0e5b33\",\n  \"permissionRequired\": true,\n  \"channel\": \"platformoftrust\",\n  \"legalParty\": {},\n  \"permissionRequestId\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/user-terms",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"user-terms"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get single user term for the current data product by id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/user-terms/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"user-terms",
												":id"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Identifier of the user term"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "TEMPORARY Update user term for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conditionId\": \"0315e748-28ac-11eb-adc1-0242ac120002\",\n  \"acceptedByUser\": true,\n  \"dataProductPublisherId\": \"d5330112-c0dd-44cf-aea1-4bf786eccb52\",\n  \"consumerUserId\": \"dc58a83e-28ab-11eb-adc1-0242ac120002\",\n  \"consumerOrganizationId\": \"0528e417-e37d-404d-b24d-89ee1a0e5b33\",\n  \"permissionRequired\": true,\n  \"channel\": \"platformoftrust\",\n  \"legalParty\": {},\n  \"permissionRequestId\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/user-terms/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"user-terms",
												":id"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Identifier of the user term"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "TEMPORARY Delete user term for the current data product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accepted\": {\n        \"byActingUser\": true\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/user-terms/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"user-terms",
												":id"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Identifier of the user term"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Manage terms (permissions) and permission requests"
						}
					],
					"description": "Manage Data Product permissions"
				},
				{
					"name": "Permission Requests",
					"item": [
						{
							"name": "List all permission requests for the user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/permission-requests",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"permission-requests"
									],
									"query": [
										{
											"key": "requestStatus",
											"value": null,
											"description": "Used to filter permission requests by request status (pending, responded)",
											"disabled": true
										},
										{
											"key": "decisionStatus",
											"value": null,
											"description": "Used to filter permission requests by decision status (accepted, declined, revoked)",
											"disabled": true
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "TEMPORARY Create permission request manually",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userTermId\": \"86661d4a-e145-4907-82ea-a3b3c7647e31\",\n    \"productCode\": \"example-product-code\",\n    \"consumerUserId\": \"dc58a83e-28ab-11eb-adc1-0242ac120002\",\n    \"consumerOrganizationId\": \"0528e417-e37d-404d-b24d-89ee1a0e5b33\",\n    \"dataProductPublisherId\": \"d5330112-c0dd-44cf-aea1-4bf786eccb52\",\n    \"channel\": \"platformoftrust\",\n    \"legalParty\": {},\n    \"requestStatus\": \"pending\",\n    \"decision\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/permission-requests",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"permission-requests"
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "Get single permission request for the user by id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/permission-requests/:id",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"permission-requests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Identifier of the permission request"
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "Give decision for the permission request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"accepted\",\n    \"details\": {\n        \"formatType\": \"plaintext\",\n        \"content\": \"Permission request accepted\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/permission-requests/:id",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"permission-requests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Identifier of the permission request"
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "TEMPORARY Delete permission request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"decision\": {\n    \"status\": \"accepted\",\n    \"decision\": {\n      \"formatType\": \"plaintext\",\n      \"content\": \"Permission request accepted\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/permission-requests/:id",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"permission-requests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Identifier of the permission request"
										}
									]
								},
								"description": "\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Purchase",
					"item": [
						{
							"name": "List all user purchases for the current product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/purchase",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"purchase"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "example-product-code",
											"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new purchase for the current product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"purchasedForOrganization\": \"0528e417-e37d-404d-b24d-89ee1a0e5b33\",\n    \"selectedProductContract\": \"0bfac868-436b-11eb-b378-0242ac130002\",\n    \"contractConditionsAccepted\": \"true\",\n    \"selectedPricePlan\": \"e3415ce0-ad04-4be7-9fa4-ca4bbf3663a5\",\n    \"paymentDetails\": \"72a983b0-fbce-473d-9899-8f707339532d\"\n}\t",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/purchase",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"purchase"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "example-product-code",
											"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get one purchase by purchase id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/purchase/:id",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"purchase",
										":id"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "example-product-code",
											"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
										},
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Unique identifier of the product purchase"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a specific product purchase for the current product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"selectedProductContract\": \"c3542bc8-734b-4fb5-b8d2-906ee168f928\",\r\n    \"selectedPricePlan\": \"2aecf329-d2eb-440a-ac06-ff8f0f262786\"\r\n}\t",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/purchase/:id",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"purchase",
										":id"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "example-product-code",
											"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
										},
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Unique identifier of the product purchase"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a specific product purchase for the current product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/purchase/:id",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"purchase",
										":id"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "example-product-code",
											"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
										},
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Unique identifier of the product purchase"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "My Data Products",
					"item": [
						{
							"name": "List all my data products in use or created by me",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/my-data-products?list=as-consumer",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"my-data-products"
									],
									"query": [
										{
											"key": "list",
											"value": "as-consumer",
											"description": "(Required) Role of user to determine which type of my data products list is returned (as-consumer, as-creator))"
										}
									]
								},
								"description": "\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Sheet",
					"item": [
						{
							"name": "Product Quality Attributes",
							"item": [
								{
									"name": "List all product quality attributes",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"description": "(Optional) Log in to see produst quality attributes created by you or your organization",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-quality-attributes",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-quality-attributes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create product quality attribute",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"description": "(Optional) Log in to see produst quality attributes created by you or your organization",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Uptime\",\n    \"description\": \"Information is updated once per day\",\n    \"qualityLevel\": \"informative\",\n    \"categorizationLocal\": \"Update frequancy\",\n    \"publisherOrganizationId\": \"01b8ebdc-778c-11eb-9439-0242ac130002\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-quality-attributes",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-quality-attributes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get one product quality attribute by id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"description": "(Optional) Log in to see produst quality attributes created by you or your organization",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-quality-attributes/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-quality-attributes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "Internal identifier of the product quality attribute"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update product quaoity attribute",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Uptime\",\n    \"description\": \"Information is updated once per day\",\n    \"qualityLevel\": \"informative\",\n    \"categorizationLocal\": \"Update frequancy\",\n    \"publisherOrganizationId\": \"01b8ebdc-778c-11eb-9439-0242ac130002\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-quality-attributes/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-quality-attributes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "Internal identifier of the product quality attribute"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete product quaoity attribute",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-quality-attributes/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-quality-attributes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "Internal identifier of the product quality attribute"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Quality Attribute",
							"item": [
								{
									"name": "List all quality attributes for current product",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/quality-attributes",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"quality-attributes"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create quality attribute for the current product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Uptime\",\n  \"description\": \"Defines uptime of this product\",\n  \"qualityLevel\": \"informative\",\n  \"measurement\": {\n    \"type\": \"percentage\",\n    \"value\": \"99\"\n  },\n  \"productQualityAttributeId\": \"d53bdc00-778a-11eb-9439-0242ac130002\",\n  \"publisherOrganizationId\": \"414272f8-778e-11eb-9439-0242ac130002\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/quality-attributes",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"quality-attributes"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get single quality attribute for the currend product by id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/quality-attributes/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"quality-attributes",
												":id"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the quality attribute"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update quality attribute for the current product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Uptime\",\n  \"description\": \"Defines uptime of this product\",\n  \"qualityLevel\": \"informative\",\n  \"measurement\": {\n    \"type\": \"percentage\",\n    \"value\": \"99\"\n  },\n  \"productQualityAttributeId\": \"d53bdc00-778a-11eb-9439-0242ac130002\",\n  \"publisherOrganizationId\": \"414272f8-778e-11eb-9439-0242ac130002\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/quality-attributes/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"quality-attributes",
												":id"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the quality attribute"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete quality attribute for the current product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/quality-attributes/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"quality-attributes",
												":id"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "example-product-code",
													"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the quality attribute"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}