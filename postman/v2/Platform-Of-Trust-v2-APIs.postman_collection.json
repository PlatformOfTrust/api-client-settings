{
	"info": {
		"_postman_id": "8b2dd81b-9492-419e-a170-8b20d8dba54d",
		"name": "Platform Of Trust v2 APIs",
		"description": "Collection for managining PoT v2 APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9516382"
	},
	"item": [
		{
			"name": "Products v2 API",
			"item": [
				{
					"name": "All operations",
					"item": [
						{
							"name": "Products",
							"item": [
								{
									"name": "DataProduct",
									"item": [
										{
											"name": "List all data products",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "{{bearer_token}}",
														"description": "Optional Authorization. Required to discover private and organization level products.",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}?type=dataproduct",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>",
															"description": "Offset of a query. Must be at least 0",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "<integer>",
															"description": "Limit the result of a query. Must be between 1 and 100",
															"disabled": true
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "Query parameter to filter by name and description data",
															"disabled": true
														},
														{
															"key": "type",
															"value": "dataproduct",
															"description": "The type of products to be returned"
														},
														{
															"key": "visibility",
															"value": "<string>",
															"description": "Visibility of the products to be listed (public, private, organization)",
															"disabled": true
														},
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
															"disabled": true
														}
													]
												},
												"description": "\n"
											},
											"response": []
										},
										{
											"name": "Create data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "Indicate the media type of the resource.",
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"productCode\": \"{{product_code}}\",\n    \"type\": \"dataproduct\",\n    \"name\": \"AccuWeather Daily Forecast\",\n    \"description\": \"Data product to retrieve harmonized daily forecast data from the AccuWeather API\",\n    \"imageUrl\": null,\n    \"industries\": \"construction\",\n    \"visibility\": {\n        \"type\": \"public\"\n    },\n    \"dataSourceId\": \"1f608758-2c80-4b99-a618-73a7b5bb7922\",\n    \"selectedDataSourceTransformerId\": \"c4546e2b-4599-4eb6-bacf-60cfd16c1e60\",\n    \"harmonizedData\": true\n}\n"
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"description": "Indicate the media type of the resource.",
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"AccuWeather Daily Forecast\",\n    \"description\": \"Data product to retrieve harmonized daily forecast data from the AccuWeather API\",\n    \"imageUrl\": null,\n    \"industries\": \"construction\",\n    \"visibility\": {\n        \"type\": \"public\"\n    },\n    \"dataSourceId\": \"1f608758-2c80-4b99-a618-73a7b5bb7922\",\n    \"selectedDataSourceTransformerId\": \"c4546e2b-4599-4eb6-bacf-60cfd16c1e60\",\n    \"harmonizedData\": true\n}\n"
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"description": "Manage product of type DataProduct"
								},
								{
									"name": "Connector",
									"item": [
										{
											"name": "List all connectors",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}?type=connector",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>",
															"description": "Offset of a query. Must be at least 0",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "<integer>",
															"description": "Limit the result of a query. Must be between 1 and 100",
															"disabled": true
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "Query parameter to filter by name and description data",
															"disabled": true
														},
														{
															"key": "type",
															"value": "connector",
															"description": "The type of products to be returned"
														},
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
															"disabled": true
														}
													]
												},
												"description": "\n"
											},
											"response": []
										}
									],
									"description": "Manage product type of Connector"
								},
								{
									"name": "Transformer",
									"item": [
										{
											"name": "List all transformers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}?type=transformer",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>",
															"description": "Offset of a query. Must be at least 0",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "<integer>",
															"description": "Limit the result of a query. Must be between 1 and 100",
															"disabled": true
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "Query parameter to filter by name and description data",
															"disabled": true
														},
														{
															"key": "type",
															"value": "transformer",
															"description": "The type of products to be returned"
														},
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
															"disabled": true
														}
													]
												},
												"description": "\n"
											},
											"response": []
										}
									],
									"description": "Manage product type of Transformer"
								},
								{
									"name": "DataSource",
									"item": [
										{
											"name": "List all data sources",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}?type=datasource",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>",
															"description": "Offset of a query. Must be at least 0",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "<integer>",
															"description": "Limit the result of a query. Must be between 1 and 100",
															"disabled": true
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "Query parameter to filter by name and description data",
															"disabled": true
														},
														{
															"key": "type",
															"value": "datasource",
															"description": "The type of products to be returned"
														},
														{
															"key": "extendModels",
															"value": "<stging>",
															"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
															"disabled": true
														}
													]
												},
												"description": "\n"
											},
											"response": []
										},
										{
											"name": "Create data source",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "Indicate the media type of the resource.",
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"productCode\": \"{{product_code}}\",\n    \"type\": \"datasource\",\n    \"name\": \"AccuWeather Daily Forecast Data Source\",\n    \"imageUrl\": null,\n    \"dataSourceTemplateId\": \"ec3086c0-2101-4c5e-98f1-00a2c8f49d11\",\n    \"accessPoint\": \"http://dataservice.accuweather.com/forecasts/v1/daily\",\n    \"selectedTransformerIds\": [\n        \"c4546e2b-4599-4eb6-bacf-60cfd16c1e60\"\n    ]\n}"
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update data source",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"description": "Indicate the media type of the resource.",
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"AccuWeather Daily Forecast Data Source\",\n    \"imageUrl\": null,\n    \"dataSourceTemplateId\": \"ec3086c0-2101-4c5e-98f1-00a2c8f49d11\",\n    \"accessPoint\": \"http://dataservice.accuweather.com/forecasts/v1/daily\",\n    \"selectedTransformerIds\": [\n        \"c4546e2b-4599-4eb6-bacf-60cfd16c1e60\"\n    ]\n}"
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product-id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"description": "Manage product type of Data Source"
								},
								{
									"name": "DataSourceTemplate",
									"item": [
										{
											"name": "List all data source templates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}?type=datasource-template",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>",
															"description": "Offset of a query. Must be at least 0",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "<integer>",
															"description": "Limit the result of a query. Must be between 1 and 100",
															"disabled": true
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "Query parameter to filter by name and description data",
															"disabled": true
														},
														{
															"key": "type",
															"value": "datasource-template",
															"description": "The type of products to be returned"
														},
														{
															"key": "extendModels",
															"value": "<stging>",
															"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
															"disabled": true
														}
													]
												},
												"description": "\n"
											},
											"response": []
										}
									]
								},
								{
									"name": "List all products",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"description": "Optional Authorization. Required to discover private and organization level products.",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}"
											],
											"query": [
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset of a query. Must be at least 0",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit the result of a query. Must be between 1 and 100",
													"disabled": true
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "Query parameter to filter by name and description data",
													"disabled": true
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "The type of products to be returned (dataproduct, datasource, connector, transformer)",
													"disabled": true
												},
												{
													"key": "visibility",
													"value": "<string>",
													"description": "Visibility of the products to be listed (public, private, organization, partner)",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "<string>",
													"description": "Array of fields to sort the list of products by, in the order provided (supported fields: productCode,type,name,createdAt,updatedAt)",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "<string>",
													"description": "Sort order for the fields defined by the sortBy parameter (asc, desc)",
													"disabled": true
												},
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
													"disabled": true
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Get one product by id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId"
											],
											"query": [
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset of a query. Must be at least 0",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit the result of a query. Must be between 1 and 100",
													"disabled": true
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "Query parameter to filter by name and description data",
													"disabled": true
												},
												{
													"key": "type",
													"value": "connector",
													"description": "The type of products to be returned",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Delete product",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Fetch data a.k.a Broker API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Create timestamp for request body",
													"var date = (new Date()).toISOString()",
													"pm.globals.set(\"date\", date);",
													"",
													"// Parse requestbody ",
													"var requestBody = pm.variables.replaceIn(pm.request.body.raw)",
													"requestBody = JSON.parse(requestBody)",
													"",
													"// Generating X-Pot-Signature",
													"const clientSecret = pm.environment.get(\"client_secret\")",
													"const bodyString = JSON.stringify(sortObject(requestBody))",
													"",
													"function sortObject(unordered, sortArrays = false) {",
													"    if (!unordered || typeof unordered !== 'object') {",
													"        return unordered;",
													"    }",
													"",
													"    if (Array.isArray(unordered)) {",
													"        const newArr = unordered.map((item) => sortObject(item, sortArrays));",
													"        if (sortArrays) {",
													"        newArr.sort();",
													"        }",
													"        return newArr;",
													"    }",
													"",
													"    const ordered = {};",
													"    Object.keys(unordered)",
													"        .sort()",
													"        .forEach((key) => {",
													"        ordered[key] = sortObject(unordered[key], sortArrays);",
													"        });",
													"    return ordered;",
													"}",
													"",
													"var hmac = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, clientSecret);",
													"hmac.update(bodyString)",
													"var hash = hmac.finalize();",
													"var base64 = CryptoJS.enc.Base64.stringify(hash);",
													"pm.environment.set(\"x_pot_signature_script_calculated\", base64);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Clear variables",
													"pm.globals.unset(\"date\");",
													"pm.environment.unset(\"x_pot_signature_script_calculated\");",
													"console.log(request)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) NOTE!: Signature generation was changed since v1\n\nA HMAC-SHA256 signature in `base64` encoded format. The signature is created from the request payload and the app's client secret.\n\nE.g. based on following parameters\n\n```\nbody = {\n    \"key\": \"valüe\",\n    \"key2\": {\n        \"name\": \"Jåhn Gätes\",\n        \"address\": \"Test Street\",\n        \"colors\": [\"Red\", \"Blue\"]\n    }\n}\nsecret = \"topSecret\"\n```\n\nit will always generate the following signature if done correctly, regardless of technology used.\n\n```\n7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nPython example:\n\n```\nimport base64\nimport hashlib\nimport hmac\nimport json\n\nbody = {\n    \"key\": \"valüe\",\n    \"key2\": {\n        \"name\": \"Jåhn Gätes\",\n        \"address\": \"Test Street\",\n        \"colors\": [\"Red\", \"Blue\"]\n    }\n}\nclient_secret = \"topSecret\"\n\nbody_string = json.dumps(\n    body,\n    sort_keys=True,\n    ensure_ascii=False,\n    separators=(\",\", \":\")\n)\n\ndigest = hmac.new(\n    client_secret.encode(\"utf-8\"),\n    body_string.encode(\"utf-8\"),\n    hashlib.sha256\n).digest()\n\n# return the digest in base64 encoded format:\nsignature = base64.b64encode(digest).decode()\n\nprint(signature)  # 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nLet's explain once which parameters to use to generate correct `body_string`. \n`sort_keys=True` means that the output of dictionaries will be sorted by keys, `separators=(',', ':')` means there is no spaces between separators. `ensure_ascii=False` is used to keep non-ASCII characters as-is rather than escaping them; e.g. keep \"åäö\" rather than escaping to \"\\\\u00e5\\\\u00e4\\\\u00f6\".\n\nJavaScript example:\n\n```\nconst jsSHA = require(\"jssha\");\nconst stringify = require(\"json-stable-stringify\");\n\nconst body = {\n  \"key\": \"valüe\",\n  \"key2\": {\n    \"name\": \"Jåhn Gätes\",\n    \"address\": \"Test Street\",\n    \"colors\": [\"Red\", \"Blue\"]\n  }\n};\n\nconst clientSecret = \"client_secret\";\n\n// Sort keys and stringify.\n// Note \"json-stable-stringify\" is used\nconst bodyString = stringify(body);\n\nconst shaObj = new jsSHA(\n  \"SHA-256\", \n  \"TEXT\", \n  { encoding: \"UTF8\" }\n);\n\nshaObj.setHMACKey(clientSecret, \"TEXT\");\nshaObj.update(bodyString);\n\n// Signature in base64 to use in request\nconst signature = shaObj.getHMAC(\"B64\");\n\nconsole.log(signature) // 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nPHP example:\n\n```\n<?php\n\nfunction ksortRecursive(&$array) {\n    if (is_array($array)) {\n        ksort($array);\n        foreach ($array as &$arr) {\n            ksortRecursive($arr);\n        }\n    }\n}\n\n$body = array(\n  \"key\" => \"valüe\",\n  \"key2\" => array(\n    \"name\" => \"Jåhn Gätes\",\n    \"address\" => \"Test Street\",\n    \"colors\" => array(\"Red\", \"Blue\")\n  )\n);\n\n$client_secret = \"topSecret\";\n\nksortRecursive($body);\n\n$body_string = json_encode(\n   $body,   \n   JSON_UNESCAPED_UNICODE\n);\n\n$signature = base64_encode(\n  hash_hmac(\n    'sha256',\n        $body_string,\n        $client_secret,\n        true\n  )\n);\n\necho($signature . \"\\n\"); # 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n",
												"key": "X-Pot-Signature",
												"value": "{{x_pot_signature_script_calculated}}"
											},
											{
												"description": "(Required) The requesting app's JWT token. The token is generated when the app is created.",
												"key": "X-App-Token",
												"value": "{{x-app-token}}"
											},
											{
												"description": "Platform of Trust OAuth bearer token of the user currently logged in in his application. This is not mandatory, but if passed, the token will be verified.",
												"key": "X-User-Token",
												"value": "{{x-user-token}}",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"@context\": \"https://standards.oftrust.net/v2/Context/DataProductParameters/Sensor/\",\n    \"timestamp\": \"{{date}}\",\n    \"parameters\": {\n       \"ids\": [{\n            \"id\": \"1\"\n        }],\n        \"startTime\": \"2020-04-20T13:06:40+00:00\",\n        \"endTime\": \"2020-05-20T14:53:54+00:00\",\n        \"dataTypes\": [\"MeasureAirHumidity\"]\n    },\n    \"authCredentials\": {\n        \"type\": \"api-key\",\n        \"encrypted\": true,\n        \"key\": \"x-api-key\",\n        \"value\": \"abcdef12345\",\n        \"position\": \"header\"\n    }\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/data",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"data"
											],
											"variable": [
												{
													"key": "productCode",
													"value": "{{product_code}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Credentials",
							"item": [
								{
									"name": "Create custom credentials for the current data product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dataSourceId\": \"1f608758-2c80-4b99-a618-73a7b5bb7922\",\n    \"name\": \"API Key credentials\",\n    \"description\": \"Credentials for example-data-source\",\n    \"type\": \"api-key\",\n    \"encrypted\": true,\n    \"key\": \"x-api-key\",\n    \"value\": \"abcdef12345\",\n    \"position\": \"header\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId/auth-credentials",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId",
												"auth-credentials"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update credential for the current data product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dataSourceId\": \"1f608758-2c80-4b99-a618-73a7b5bb7922\",\n    \"description\": \"API key for example-data-source\",\n    \"encrypted\": true,\n    \"key\": \"x-api-key\",\n    \"value\": \"abcdef12345\",\n    \"position\": \"header\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId/auth-credentials/:credentialId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId",
												"auth-credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												},
												{
													"key": "credentialId",
													"value": "<uuid>"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete credential for the current data product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId/auth-credentials/:credentialId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId",
												"auth-credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												},
												{
													"key": "credentialId",
													"value": "<uuid>"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Contract and conditions",
							"item": [
								{
									"name": "Contract",
									"item": [
										{
											"name": "List all contracts for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/contracts",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"contracts"
													],
													"query": [
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create contract for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": {\n        \"formatType\": \"plaintext\",\n        \"content\": \"Please read this contract and conditions carefully before using the Data Product\"\n    },\n    \"definitions\": {\n        \"formatType\": \"html\",\n        \"content\": \"<p><strong>GDPR</strong> -&nbsp;The General Data Protection Regulation 2016/679 is a regulation in EU law on data protection and privacy in the European Union and the European Economic Area </p>  <p> <strong>Data Subject</strong> -&nbsp;A data subject is an end user whose personal data can be collected </p>\"\n    },\n    \"publisherOrganizationId\": \"aea56b5b-28bb-40cc-b586-3d36d664149d\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/contracts",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"contracts"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get single contract for the current data product by id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/contracts/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"contracts",
														":id"
													],
													"query": [
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the contract"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get the generated binary file for the contract document",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/contracts/:id/document",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"contracts",
														":id",
														"document"
													],
													"query": [
														{
															"key": "documentType",
															"value": "",
															"description": "Type of contract document to generate and download. Available values : pdf, docx",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the contract"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update contract for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": {\n        \"formatType\": \"plaintext\",\n        \"content\": \"Please read this contract and conditions carefully before using the Data Product\"\n    },\n    \"definitions\": {\n        \"formatType\": \"html\",\n        \"content\": \"<p><strong>GDPR</strong> -&nbsp;The General Data Protection Regulation 2016/679 is a regulation in EU law on data protection and privacy in the European Union and the European Economic Area </p>  <p> <strong>Data Subject</strong> -&nbsp;A data subject is an end user whose personal data can be collected </p>\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/contracts/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"contracts",
														":id"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the contract"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contract for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/contracts/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"contracts",
														":id"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the contract"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Conditions",
									"item": [
										{
											"name": "Condition types",
											"item": [
												{
													"name": "List all condition types supported by the system",
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ilg1ZVhrNHh5b2pORnVtMWtsMll0djhkbE5QNC1jNTdkTzZRR1RWQndhTmsifQ.eyJleHAiOjE2NTI5NjM0NzAsIm5iZiI6MTY1Mjg3NzA3MCwidmVyIjoiMS4wIiwiaXNzIjoiaHR0cHM6Ly9wbGF0Zm9ybW9mdHJ1c3RhcHBzZGV2LmIyY2xvZ2luLmNvbS80ZWRkNTU5Ny1hZTJhLTQxYWEtYThmOS1iYjY1ZWVmYzg3MWMvdjIuMC8iLCJzdWIiOiIxMGM0NGY2NC01YWY5LTQyMGQtOWE0ZC0xNTJkNTc2NTIzYTQiLCJhdWQiOiI1Y2NkMGFkNS00MDBjLTRiZjYtYTQyZS1kZmYwNmJiZDcwZGMiLCJub25jZSI6ImRlZmF1bHROb25jZSIsImlhdCI6MTY1Mjg3NzA3MCwiYXV0aF90aW1lIjoxNjUyODc3MDcwLCJvaWQiOiIxMGM0NGY2NC01YWY5LTQyMGQtOWE0ZC0xNTJkNTc2NTIzYTQiLCJnaXZlbl9uYW1lIjoiT25pIiwiZW1haWxzIjpbIm9uaUBzYnAtcm9tYW5pYS5jb20iXSwidGZwIjoiQjJDXzFfRGVmYXVsdCJ9.eAAGgs3qEx_IvGJk77z6BU4DY2WS_2HEV-e2vjbPNNxqnBx9DK65S8ZXUOxXz31pQiDM0eueJN4nJdFAzc7knjoDGRF7S5vSJ5WA-C0B_Gzx7NTmPGh_UzMV6HlGYY--jQ9Jn8x_-1IkbhL7lOUtgswNauj19wJ42xPg-RiGyJmKlE6lQ87ar4gPK2_tZEU4JFifxA0IVkFzI0HTLFZads3DU_EiIi8KimK4NnlDI63mfdy6WJDSmHW9nSYzjT1yV24qWa9C7Bx2AFVkPnLMKrxvggp-wfB_SWHg40BbLEN-yYIZYiDHltnI8lUfSzjXh3s_IFVSWcWZ4qLExWUEEw",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{pot_base_url}}/products/{{version}}/product-condition-types",
															"host": [
																"{{pot_base_url}}"
															],
															"path": [
																"products",
																"{{version}}",
																"product-condition-types"
															],
															"query": [
																{
																	"key": "type",
																	"value": "text, valueset, geographical, consent",
																	"description": "The type of conditions to be returned: text, valueset, geographical, consent (can be used in any combination)- valueset: Returns the conditions that have the valueSet option set to 'true'- geographical: Returns the conditions that have the geographicalLimitation option set to 'true'- consent: Returns the conditions that have the consent option set to 'true'- text: Returns the conditions that have all of the other options set to 'false'     ",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Get one condition type by id",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{pot_base_url}}/products/{{version}}/product-condition-types/:id",
															"host": [
																"{{pot_base_url}}"
															],
															"path": [
																"products",
																"{{version}}",
																"product-condition-types",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Internal identifier of the condition type"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Create condition type",
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Subscription-Key",
																"value": "{{subscription_key}}",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{bearer_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Consent\",\n  \"conditionTypeDescription\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"This condition type is used to set required consent\"\n  },\n  \"valueSet\": {\n    \"supported\": false\n  },\n  \"geographicalLimitation\": {\n    \"supported\": false\n  },\n  \"consent\": {\n    \"required\": true,\n    \"channels\": [\n      \"platformoftrust\",\n      \"mydatashare\",\n      \"signspace\"\n    ],\n    \"partyRoles\": [\n      \"datapublisher\",\n      \"datasubject\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{pot_base_url}}/internal/products/{{version}}/product-condition-types",
															"host": [
																"{{pot_base_url}}"
															],
															"path": [
																"internal",
																"products",
																"{{version}}",
																"product-condition-types"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "List all conditions for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/conditions",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"conditions"
													],
													"query": [
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create condition for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"contractId\": \"71cc9d12-0400-44aa-9fab-cdc268cb6ed3\",\n  \"productConditionTypeId\": \"298cd23c-18cb-4e30-8a0e-8767db5cbaff\",\n  \"name\": \"Contracting parties\",\n  \"description\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"CONTRACTING PARTIES<br />This Data Licensing Agreement (“Agreement”) is entered into on [Effective Date] between:<br />[Name] <br /><br />[Business ID]<br />[Address]<br /><br />and following entities belonging to the same group of companies:<br /><br />[Name] <br /><br />[Business ID]<br />[Address]<br /><br />(hereinafter “Licensee”)<br /><br />Contact person in contractual matters:<br /><br />and<br /><br />[Name] <br /><br />[Business ID]<br />[Address]<br /><br />(hereinafter “Licensor”)<br /><br />Contact person in contractual matters:<br />The Parties set out in Sections above hereinafter jointly the “Parties” and each individually a “Party”.\"\n  },\n  \"valueSet\": {\n    \"supported\": false\n  },\n  \"geographicalLimitation\": {\n    \"supported\": false\n  },\n  \"consent\": {\n    \"required\": false\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/conditions",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"conditions"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get single condition for the current data product by id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/conditions/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"conditions",
														":id"
													],
													"query": [
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the condition"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update condition for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Consent from Data Publisher\",\n  \"description\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"Consent from Data Publiser is required\"\n  },\n  \"valueSet\": {\n    \"supported\": false\n  },\n  \"geographicalLimitation\": {\n    \"supported\": false\n  },\n  \"consent\": {\n    \"required\": true,\n    \"selectedChannel\": \"PlatformOfTrust\",\n    \"selectedPartyRole\": \"datasubject\",\n    \"party\": {\n\t\t\t\"id\": \"3fdb678a-84fd-42c5-be5c-6c9ee6c313be\"\n\t\t}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/conditions/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"conditions",
														":id"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the condition"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete condition for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/conditions/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"conditions",
														":id"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the condition"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Permission stack and user terms",
							"item": [
								{
									"name": "Permission Stack",
									"item": [
										{
											"name": "List all permission stacks for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productCode/permissions?consumerUserId=uuid",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productCode",
														"permissions"
													],
													"query": [
														{
															"key": "consumerUserId",
															"value": "uuid",
															"description": "Unique identifier of internal user (consumer)"
														}
													],
													"variable": [
														{
															"key": "productCode",
															"value": "{{product_code}}",
															"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
														}
													]
												},
												"description": "Get all permission stacks or use query parameter user_id to ger permission stacks related to specific user"
											},
											"response": []
										},
										{
											"name": "Get one permission stack for the current data product by id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productCode/permissions/:permissionId",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productCode",
														"permissions",
														":permissionId"
													],
													"variable": [
														{
															"key": "productCode",
															"value": "{{product_code}}",
															"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
														},
														{
															"key": "permissionId",
															"value": "example-id",
															"description": "(Required) Unique identifier of  permission stack"
														}
													]
												},
												"description": "Get one permission stacks by permission id"
											},
											"response": []
										}
									]
								},
								{
									"name": "User Terms",
									"item": [
										{
											"name": "List all user terms for the current data product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productCode/user-terms",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productCode",
														"user-terms"
													],
													"query": [
														{
															"key": "user_id",
															"value": "<uuid>",
															"description": "Unique identifier of internal user (consumer)",
															"disabled": true
														},
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "By default some of the models are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response (condition, condition-type, permission-request)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productCode",
															"value": "{{product_code}}",
															"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get single user term for the current data product by id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productCode/user-terms/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productCode",
														"user-terms",
														":id"
													],
													"variable": [
														{
															"key": "productCode",
															"value": "{{product_code}}",
															"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Identifier of the user term"
														}
													]
												}
											},
											"response": []
										}
									],
									"description": "Manage terms (permissions) and permission requests"
								}
							],
							"description": "Manage Data Product permissions"
						},
						{
							"name": "Permission Requests",
							"item": [
								{
									"name": "List all permission requests for the user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/permission-requests",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"permission-requests"
											],
											"query": [
												{
													"key": "requestStatus",
													"value": "",
													"description": "Used to filter permission requests by request status (pending, responded)",
													"disabled": true
												},
												{
													"key": "decisionStatus",
													"value": "",
													"description": "Used to filter permission requests by decision status (accepted, declined, revoked)",
													"disabled": true
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Get single permission request for the user by id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/permission-requests/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"permission-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Identifier of the permission request"
												}
											]
										},
										"description": "\n"
									},
									"response": []
								},
								{
									"name": "Give decision for the permission request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"accepted\",\n    \"details\": {\n        \"formatType\": \"plaintext\",\n        \"content\": \"Permission request accepted\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/permission-requests/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"permission-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Identifier of the permission request"
												}
											]
										},
										"description": "\n"
									},
									"response": []
								}
							]
						},
						{
							"name": "Purchase",
							"item": [
								{
									"name": "List all user purchases for the current product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId/purchase",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId",
												"purchase"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a new purchase for the current product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"selectedProductContract\": \"71cc9d12-0400-44aa-9fab-cdc268cb6ed3\",\n    \"contractConditionsAccepted\": \"true\"\n}\t",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId/purchase",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId",
												"purchase"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get one purchase by purchase id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId/purchase/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId",
												"purchase",
												":id"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier of the product purchase"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update a specific product purchase for the current product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"selectedProductContract\": \"c3542bc8-734b-4fb5-b8d2-906ee168f928\",\r\n    \"selectedPricePlan\": \"2aecf329-d2eb-440a-ac06-ff8f0f262786\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId/purchase/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId",
												"purchase",
												":id"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier of the product purchase"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete a specific product purchase for the current product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productId/purchase/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productId",
												"purchase",
												":id"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{productId}}"
												},
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier of the product purchase"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "My Data Products",
							"item": [
								{
									"name": "List all my data products in use or created by me",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/my-data-products?list=as-consumer, as-creator",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"my-data-products"
											],
											"query": [
												{
													"key": "list",
													"value": "as-consumer, as-creator",
													"description": "(Required) Role of user to determine which type of my data products list is returned (as-consumer, as-creator))"
												}
											]
										},
										"description": "\n"
									},
									"response": []
								}
							]
						},
						{
							"name": "Data Sheet",
							"item": [
								{
									"name": "Quality Attributes Templates",
									"item": [
										{
											"name": "List all quality attribute templates",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "{{bearer_token}}",
														"description": "(Optional) Log in to see produst quality attributes created by you or your organization",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/quality-attribute-templates",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														"quality-attribute-templates"
													],
													"query": [
														{
															"key": "category",
															"value": "standard",
															"description": "(Optional) Filter response by category",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create quality attribute template",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Uptime\",\n    \"description\": \"Information is updated once per day\",\n    \"qualityLevel\": \"informative\",\n    \"category\": \"extension\",\n    \"categorizationByUser\": \"Update frequancy\",\n    \"publisherOrganizationId\": \"01b8ebdc-778c-11eb-9439-0242ac130002\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/quality-attribute-templates",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														"quality-attribute-templates"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get one quality attribute template by id",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "{{bearer_token}}",
														"description": "(Optional) Log in to see produst quality attributes created by you or your organization",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/quality-attribute-templates/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														"quality-attribute-templates",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Internal identifier of the product quality attribute"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update quality attribute template",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Uptime\",\n    \"description\": \"Defines uptime of this product\",\n    \"qualityMetric\": {\n        \"type\": \"percentage\",\n        \"value\": \"99\"\n    },\n    \"categorizationStandard\": \"Uptime\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/quality-attribute-templates/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														"quality-attribute-templates",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Internal identifier of the product quality attribute"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete quality attribute template",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/quality-attribute-templates/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														"quality-attribute-templates",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Internal identifier of the product quality attribute"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Quality Attribute",
									"item": [
										{
											"name": "List all quality attributes for current product",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/quality-attributes",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"quality-attributes"
													],
													"query": [
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create quality attribute for the current product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Uptime\",\n  \"description\": \"Defines uptime of this product\",\n  \"qualityLevel\": \"informative\",\n  \"qualityMetric\": {\n    \"type\": \"percentage\",\n    \"value\": \"99\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/quality-attributes",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"quality-attributes"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get single quality attribute for the currend product by id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/quality-attributes/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"quality-attributes",
														":id"
													],
													"query": [
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the quality attribute"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update quality attribute for the current product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Uptime\",\n  \"description\": \"Defines uptime of this product\",\n  \"qualityLevel\": \"informative\",\n  \"qualityMetric\": {\n    \"type\": \"percentage\",\n    \"value\": \"99\"\n  },\n  \"publisherOrganizationId\": \"414272f8-778e-11eb-9439-0242ac130002\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/quality-attributes/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"quality-attributes",
														":id"
													],
													"query": [
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the quality attribute"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete quality attribute for the current product",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearer_token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{pot_base_url}}/products/{{version}}/:productId/quality-attributes/:id",
													"host": [
														"{{pot_base_url}}"
													],
													"path": [
														"products",
														"{{version}}",
														":productId",
														"quality-attributes",
														":id"
													],
													"query": [
														{
															"key": "extendModels",
															"value": "<string>",
															"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{product_id}}"
														},
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Internal identifier of the quality attribute"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "ProductTypes",
							"item": [
								{
									"name": "List all product types",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-types",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-types"
											]
										}
									},
									"response": []
								}
							],
							"description": "Retrieve the list of supported product types in Platform of Trust",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Protocol",
							"item": [
								{
									"name": "Read One Protocol",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer-token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/protocols/:protocolId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"protocols",
												":protocolId"
											],
											"variable": [
												{
													"key": "protocolId",
													"value": "8af9a232-9043-431d-97e6-9e25e4c6f1e6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Many Protocol",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer-token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/protocols",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"protocols"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Data Formats",
							"item": [
								{
									"name": "Read Many Data Formats",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer-token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/data-formats",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"data-formats"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read One Data Format",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearer-token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/data-formats/:dataFormatId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"data-formats",
												":dataFormatId"
											],
											"variable": [
												{
													"key": "dataFormatId",
													"value": "ad36d852-2c62-4125-90ba-45f860d45417"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Data Publisher",
					"item": [
						{
							"name": "List all connectors",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}?type=connector",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset of a query. Must be at least 0",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit the result of a query. Must be between 1 and 100",
											"disabled": true
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Query parameter to filter by name and description data",
											"disabled": true
										},
										{
											"key": "type",
											"value": "connector",
											"description": "The type of products to be returned"
										},
										{
											"key": "extendModels",
											"value": "<string>",
											"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
											"disabled": true
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "List all transformers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}?type=transformer",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset of a query. Must be at least 0",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit the result of a query. Must be between 1 and 100",
											"disabled": true
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Query parameter to filter by name and description data",
											"disabled": true
										},
										{
											"key": "type",
											"value": "transformer",
											"description": "The type of products to be returned"
										},
										{
											"key": "extendModels",
											"value": "<string>",
											"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
											"disabled": true
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "List all data sources",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}?type=datasource",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset of a query. Must be at least 0",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit the result of a query. Must be between 1 and 100",
											"disabled": true
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Query parameter to filter by name and description data",
											"disabled": true
										},
										{
											"key": "type",
											"value": "datasource",
											"description": "The type of products to be returned"
										},
										{
											"key": "extendModels",
											"value": "<stging>",
											"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
											"disabled": true
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "Create data source",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Indicate the media type of the resource.",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productCode\": \"{{product_code}}\",\n    \"type\": \"datasource\",\n    \"name\": \"Example data source\",\n\t\t\"description\": \"Example description of the data source\",\n\t\t\"imageUrl\": null, \n    \"publisherOrganizationId\": \"32615d6b-c88e-4606-ae39-2131ed6d8912\",\n    \"connectorProductCode\": \"example-connector-product-code\", \n    \"transformerProductCodes\": [\n        \"example-transformer-product-code\"\n    ],\n    \"protocol\": \"https\",\n    \"authType\": \"basic\",\n    \"accessPoint\": \"https://example-data-source.com/api\",\n    \"behindVpn\": false\n}"
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create data product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Indicate the media type of the resource.",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productCode\": \"{{product_code}}\",\n    \"type\": \"dataproduct\",\n    \"name\": \"Example data product\",\n    \"publisherOrganizationId\": \"32615d6b-c88e-4606-ae39-2131ed6d8912\",\n    \"description\": \"Data product to retrieve CO2 data\",\n    \"imageUrl\": null,\n    \"dataSources\": [\n        {\n            \"productCode\": \"example-data-source-product-code\",\n            \"transformersForDataProduct\": [\n                \"example-transformer-product-code\"\n            ]\n        }\n    ],\n    \"industries\": \"construction\",\n    \"visibility\": {\n        \"type\": \"public\"\n    }\n}"
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create contract for the current data product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"Please read this contract and conditions carefully before using the Data Product\"\n  },\n  \"definitions\": {\n    \"formatType\": \"html\",\n    \"content\": \"<p><strong>GDPR</strong> -&nbsp;The General Data Protection Regulation 2016/679 is a regulation in EU law on data protection and privacy in the European Union and the European Economic Area </p>  <p> <strong>Data Subject</strong> -&nbsp;A data subject is an end user whose personal data can be collected </p>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/contracts",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"contracts"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "{{product_code}}",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List all condition types supported by the system",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/product-condition-types",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"product-condition-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create condition for the current data product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contractId\": \"71cc9d12-0400-44aa-9fab-cdc268cb6ed3\",\n  \"productConditionTypeId\": \"298cd23c-18cb-4e30-8a0e-8767db5cbaff\",\n  \"name\": \"Contracting parties\",\n  \"description\": {\n    \"formatType\": \"plaintext\",\n    \"content\": \"CONTRACTING PARTIES<br />This Data Licensing Agreement (“Agreement”) is entered into on [Effective Date] between:<br />[Name] <br /><br />[Business ID]<br />[Address]<br /><br />and following entities belonging to the same group of companies:<br /><br />[Name] <br /><br />[Business ID]<br />[Address]<br /><br />(hereinafter “Licensee”)<br /><br />Contact person in contractual matters:<br /><br />and<br /><br />[Name] <br /><br />[Business ID]<br />[Address]<br /><br />(hereinafter “Licensor”)<br /><br />Contact person in contractual matters:<br />The Parties set out in Sections above hereinafter jointly the “Parties” and each individually a “Party”.\"\n  },\n  \"valueSet\": {\n    \"supported\": false\n  },\n  \"geographicalLimitation\": {\n    \"supported\": false\n  },\n  \"consent\": {\n    \"required\": false\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"conditions"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "{{product_code}}",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List all permission requests for the user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/permission-requests",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"permission-requests"
									],
									"query": [
										{
											"key": "requestStatus",
											"value": "",
											"description": "Used to filter permission requests by request status (pending, responded)",
											"disabled": true
										},
										{
											"key": "decisionStatus",
											"value": "",
											"description": "Used to filter permission requests by decision status (accepted, declined, revoked)",
											"disabled": true
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "Give decision for the permission request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"accepted\",\n    \"details\": {\n        \"formatType\": \"plaintext\",\n        \"content\": \"Permission request accepted\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/permission-requests/:id",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"permission-requests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Identifier of the permission request"
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "List all my data products in use or created by me",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/my-data-products?list=as-consumer, as-creator",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"my-data-products"
									],
									"query": [
										{
											"key": "list",
											"value": "as-consumer, as-creator",
											"description": "(Required) Role of user to determine which type of my data products list is returned (as-consumer, as-creator))"
										}
									]
								},
								"description": "\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Consumer",
					"item": [
						{
							"name": "List all data products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer_token}}",
										"description": "Optional Authorization. Required to discover private and organization level products.",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}?type=dataproduct",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset of a query. Must be at least 0",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit the result of a query. Must be between 1 and 100",
											"disabled": true
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Query parameter to filter by name and description data",
											"disabled": true
										},
										{
											"key": "type",
											"value": "dataproduct",
											"description": "The type of products to be returned"
										},
										{
											"key": "visibility",
											"value": "<string>",
											"description": "Visibility of the products to be listed (public, private, organization)",
											"disabled": true
										},
										{
											"key": "extendModels",
											"value": "<string>",
											"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
											"disabled": true
										}
									]
								},
								"description": "\n"
							},
							"response": []
						},
						{
							"name": "List all contracts for the current data product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/contracts",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"contracts"
									],
									"query": [
										{
											"key": "extendModels",
											"value": "<string>",
											"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "productCode",
											"value": "{{product_code}}",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new purchase for the current product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"selectedProductContract\": \"71cc9d12-0400-44aa-9fab-cdc268cb6ed3\",\n    \"contractConditionsAccepted\": \"true\"\n}\t",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/purchase",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"purchase"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "{{product_code}}",
											"description": "(Required) Product code is a unique identifier used to invoke a particular product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch data a.k.a Broker API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Create timestamp for request body",
											"var date = (new Date()).toISOString()",
											"pm.globals.set(\"date\", date);",
											"",
											"// Parse requestbody ",
											"var requestBody = pm.variables.replaceIn(pm.request.body.raw)",
											"requestBody = JSON.parse(requestBody)",
											"",
											"// Generating X-Pot-Signature",
											"const clientSecret = pm.environment.get(\"client_secret\")",
											"const bodyString = JSON.stringify(sortObject(requestBody))",
											"",
											"function sortObject(unordered, sortArrays = false) {",
											"    if (!unordered || typeof unordered !== 'object') {",
											"        return unordered;",
											"    }",
											"",
											"    if (Array.isArray(unordered)) {",
											"        const newArr = unordered.map((item) => sortObject(item, sortArrays));",
											"        if (sortArrays) {",
											"        newArr.sort();",
											"        }",
											"        return newArr;",
											"    }",
											"",
											"    const ordered = {};",
											"    Object.keys(unordered)",
											"        .sort()",
											"        .forEach((key) => {",
											"        ordered[key] = sortObject(unordered[key], sortArrays);",
											"        });",
											"    return ordered;",
											"}",
											"",
											"var hmac = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, clientSecret);",
											"hmac.update(bodyString)",
											"var hash = hmac.finalize();",
											"var base64 = CryptoJS.enc.Base64.stringify(hash);",
											"pm.environment.set(\"x_pot_signature_script_calculated\", base64);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Clear variables",
											"pm.globals.unset(\"date\");",
											"pm.environment.unset(\"x_pot_signature_script_calculated\");",
											"console.log(request)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) NOTE!: Signature generation was changed since v1\n\nA HMAC-SHA256 signature in `base64` encoded format. The signature is created from the request payload and the app's client secret.\n\nE.g. based on following parameters\n\n```\nbody = {\n    \"key\": \"valüe\",\n    \"key2\": {\n        \"name\": \"Jåhn Gätes\",\n        \"address\": \"Test Street\",\n        \"colors\": [\"Red\", \"Blue\"]\n    }\n}\nsecret = \"topSecret\"\n```\n\nit will always generate the following signature if done correctly, regardless of technology used.\n\n```\n7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nPython example:\n\n```\nimport base64\nimport hashlib\nimport hmac\nimport json\n\nbody = {\n    \"key\": \"valüe\",\n    \"key2\": {\n        \"name\": \"Jåhn Gätes\",\n        \"address\": \"Test Street\",\n        \"colors\": [\"Red\", \"Blue\"]\n    }\n}\nclient_secret = \"topSecret\"\n\nbody_string = json.dumps(\n    body,\n    sort_keys=True,\n    ensure_ascii=False,\n    separators=(\",\", \":\")\n)\n\ndigest = hmac.new(\n    client_secret.encode(\"utf-8\"),\n    body_string.encode(\"utf-8\"),\n    hashlib.sha256\n).digest()\n\n# return the digest in base64 encoded format:\nsignature = base64.b64encode(digest).decode()\n\nprint(signature)  # 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nLet's explain once which parameters to use to generate correct `body_string`. \n`sort_keys=True` means that the output of dictionaries will be sorted by keys, `separators=(',', ':')` means there is no spaces between separators. `ensure_ascii=False` is used to keep non-ASCII characters as-is rather than escaping them; e.g. keep \"åäö\" rather than escaping to \"\\\\u00e5\\\\u00e4\\\\u00f6\".\n\nJavaScript example:\n\n```\nconst jsSHA = require(\"jssha\");\nconst stringify = require(\"json-stable-stringify\");\n\nconst body = {\n  \"key\": \"valüe\",\n  \"key2\": {\n    \"name\": \"Jåhn Gätes\",\n    \"address\": \"Test Street\",\n    \"colors\": [\"Red\", \"Blue\"]\n  }\n};\n\nconst clientSecret = \"client_secret\";\n\n// Sort keys and stringify.\n// Note \"json-stable-stringify\" is used\nconst bodyString = stringify(body);\n\nconst shaObj = new jsSHA(\n  \"SHA-256\", \n  \"TEXT\", \n  { encoding: \"UTF8\" }\n);\n\nshaObj.setHMACKey(clientSecret, \"TEXT\");\nshaObj.update(bodyString);\n\n// Signature in base64 to use in request\nconst signature = shaObj.getHMAC(\"B64\");\n\nconsole.log(signature) // 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n\nPHP example:\n\n```\n<?php\n\nfunction ksortRecursive(&$array) {\n    if (is_array($array)) {\n        ksort($array);\n        foreach ($array as &$arr) {\n            ksortRecursive($arr);\n        }\n    }\n}\n\n$body = array(\n  \"key\" => \"valüe\",\n  \"key2\" => array(\n    \"name\" => \"Jåhn Gätes\",\n    \"address\" => \"Test Street\",\n    \"colors\" => array(\"Red\", \"Blue\")\n  )\n);\n\n$client_secret = \"topSecret\";\n\nksortRecursive($body);\n\n$body_string = json_encode(\n   $body,   \n   JSON_UNESCAPED_UNICODE\n);\n\n$signature = base64_encode(\n  hash_hmac(\n    'sha256',\n        $body_string,\n        $client_secret,\n        true\n  )\n);\n\necho($signature . \"\\n\"); # 7aVthZdRg8OZw9MDQxe7DfTdsnTOvi68Lfuq3ynaBj4=\n```\n",
										"key": "X-Pot-Signature",
										"value": "{{x_pot_signature_script_calculated}}"
									},
									{
										"description": "(Required) The requesting app's JWT token. The token is generated when the app is created.",
										"key": "X-App-Token",
										"value": "{{x-app-token}}"
									},
									{
										"description": "Platform of Trust OAuth bearer token of the user currently logged in in his application. This is not mandatory, but if passed, the token will be verified.",
										"key": "X-User-Token",
										"value": "{{x-user-token}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": \"https://standards.oftrust.net/v2/Context/DataProductParameters/Sensor/\",\n    \"timestamp\": \"{{date}}\",\n    \"parameters\": {\n       \"ids\": [{\n                \"id\": \"1\"\n            }],\n        \"startTime\": \"2020-04-20T13:06:40+00:00\",\n        \"endTime\": \"2020-05-20T14:53:54+00:00\",\n        \"dataTypes\": [\"MeasureAirHumidity\"]\n    },\n    \"authCredentials\": {\n\t\t\"type\": \"api-key\",\n    \"encrypted\": true,\n    \"key\": \"x-api-key\",\n    \"value\": \"abcdef12345\",\n    \"position\": \"header\"\n\t\t}\n}"
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/data",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"data"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "{{product_code}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Products v2 API - Internal",
			"item": [
				{
					"name": "Products",
					"item": [
						{
							"name": "Connector",
							"item": [
								{
									"name": "Create connector",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscription_key}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"type": "text"
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productCode\": \"{{product_code}}\",\n    \"type\": \"connector\",\n    \"name\": \"AccuWeather Connector\",\n    \"description\": \"Connection to AccuWeather API\",\n    \"imageUrl\": null,\n    \"parameterContext\": \"https://standards.oftrust.net/v2/Context/DataProductParameters/Sensor/\",\n    \"contactPersonName\": \"Platform of Trust Oy\",\n    \"contactPersonEmail\": \"pot@mail.com\",\n    \"connectorInfo\": \"v2 connector\",\n    \"isExternal\": false,\n    \"connectorType\": \"generic\",\n    \"connectorParameterMap\": \"string\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"internal",
												"{{api}}",
												"{{version}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update connector",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscription_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"AccuWeather Connector\",\n    \"description\": \"Connection to AccuWeather API\",\n    \"imageUrl\": null,\n    \"parameterContext\": \"https://standards.oftrust.net/v2/Context/DataProductParameters/Sensor/\",\n    \"contactPersonName\": \"Platform of Trust Oy\",\n    \"contactPersonEmail\": \"pot@mail.com\",\n    \"connectorInfo\": \"v2 connector\",\n    \"isExternal\": false,\n    \"connectorType\": \"generic\",\n    \"connectorParameterMap\": \"string\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}/:productId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"internal",
												"{{api}}",
												"{{version}}",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Transformer",
							"item": [
								{
									"name": "Create transformer",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscription_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productCode\": \"{{product_code}}\",\n    \"type\": \"transformer\",\n    \"name\": \"AccuWeather Daily Forecast Transformer\",\n    \"description\": \"Harmonizes daily forecast data\",\n    \"imageUrl\": null,\n    \"outputFormatId\": \"329e02aa-50b0-4715-aa19-503a2edf8e94\",\n    \"inputFormatIds\": [\n        \"ddd71903-0a41-4c90-bfbe-5d07f235ebc8\"\n    ],\n    \"isExternal\": \"false\",\n    \"transformerType\": \"generic\",\n    \"transformationMap\": \"string\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"internal",
												"{{api}}",
												"{{version}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update transformer",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscription_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"AccuWeather Daily Forecast Transformer\",\n    \"description\": \"Harmonizes daily forecast data\",\n    \"imageUrl\": null,\n    \"outputFormatId\": \"329e02aa-50b0-4715-aa19-503a2edf8e94\",\n    \"inputFormatIds\": [\n        \"ddd71903-0a41-4c90-bfbe-5d07f235ebc8\"\n    ],\n    \"isExternal\": \"false\",\n    \"transformerType\": \"generic\",\n    \"transformationMap\": \"string\"\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}/:productId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"internal",
												"{{api}}",
												"{{version}}",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Data Source Template",
							"item": [
								{
									"name": "Create data source template",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscription_key}}",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productCode\": \"{{product_code}}\",\n    \"type\": \"datasource-template\",\n    \"name\": \"AccuWeather Daily Forecasts Template\",\n    \"description\": \"Data source template for AccuWeather daily forecasts\",\n    \"imageUrl\": null,\n    \"protocolId\": \"8af9a232-9043-431d-97e6-9e25e4c6f1e6\",\n    \"connectorId\": \"e1ae4609-9f4f-46d7-ad8d-1e3227a0c420\",\n    \"supportedTransformerIds\": [\n        \"c4546e2b-4599-4eb6-bacf-60cfd16c1e60\"\n    ]\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"internal",
												"{{api}}",
												"{{version}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update data source template",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"description": "Indicate the media type of the resource.",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscription_key}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{bearer_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"AccuWeather Daily Forecasts Template\",\n    \"description\": \"Data source template for AccuWeather daily forecasts\",\n    \"imageUrl\": null,\n    \"protocolId\": \"8af9a232-9043-431d-97e6-9e25e4c6f1e6\",\n    \"connectorId\": \"e1ae4609-9f4f-46d7-ad8d-1e3227a0c420\",\n    \"supportedTransformerIds\": [\n        \"c4546e2b-4599-4eb6-bacf-60cfd16c1e60\"\n    ]\n}"
										},
										"url": {
											"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}/:productId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"internal",
												"{{api}}",
												"{{version}}",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "{{product_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Protocol",
					"item": [
						{
							"name": "Create Protocol",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ilg1ZVhrNHh5b2pORnVtMWtsMll0djhkbE5QNC1jNTdkTzZRR1RWQndhTmsifQ.eyJleHAiOjE2NTMwNDE1OTgsIm5iZiI6MTY1Mjk1NTE5OCwidmVyIjoiMS4wIiwiaXNzIjoiaHR0cHM6Ly9wbGF0Zm9ybW9mdHJ1c3RhcHBzZGV2LmIyY2xvZ2luLmNvbS80ZWRkNTU5Ny1hZTJhLTQxYWEtYThmOS1iYjY1ZWVmYzg3MWMvdjIuMC8iLCJzdWIiOiIxMGM0NGY2NC01YWY5LTQyMGQtOWE0ZC0xNTJkNTc2NTIzYTQiLCJhdWQiOiI1Y2NkMGFkNS00MDBjLTRiZjYtYTQyZS1kZmYwNmJiZDcwZGMiLCJub25jZSI6ImRlZmF1bHROb25jZSIsImlhdCI6MTY1Mjk1NTE5OCwiYXV0aF90aW1lIjoxNjUyOTU1MTk4LCJvaWQiOiIxMGM0NGY2NC01YWY5LTQyMGQtOWE0ZC0xNTJkNTc2NTIzYTQiLCJnaXZlbl9uYW1lIjoiT25pIiwiZW1haWxzIjpbIm9uaUBzYnAtcm9tYW5pYS5jb20iXSwidGZwIjoiQjJDXzFfRGVmYXVsdCJ9.iLpMfNlU7wRDVVTtOcH0cVgjyRBO8g-5Wl7BkD8nKPGnyNgs17-zHXf--i1S10cFzuEBXlznvweHPl_fB6o4Z0G_B7d3c0wrS4AuCUSauo0DiK-mSSQ7VLHvtczi9qayC04MidWduT0_QtzySDkUwSOKeUlMNcNyPzzmPDd9vPORN8GPCl8vsLAZPC5yGGwbVVIypOnUcIDtGdz5g1L2ddmZawPcEUAzFbmmZwaXw5f4bdRjvw5q8HBDKn2baIvY_guKIiokRkjvPOsk1oEBZDevcKLUY-t25VVyRlv4a6dAmVhCUCxDSYkx8IhdELdLgB6VlQBtuSgNmrfCIydleA",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscription_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"protocolCode\": \"protocol-code-2\",\r\n    \"name\": \"Protocol name\",\r\n    \"description\": \"Protocol description\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://func-pot-core-protocol-dev-we.azurewebsites.net/api/protocols?code=4lsofGGc/UkArCddJf4aAnjdSoGFVam2hxMfcwY0ZfwRm3GPy3Gn5Q==",
									"protocol": "https",
									"host": [
										"func-pot-core-protocol-dev-we",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"protocols"
									],
									"query": [
										{
											"key": "code",
											"value": "4lsofGGc/UkArCddJf4aAnjdSoGFVam2hxMfcwY0ZfwRm3GPy3Gn5Q=="
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Protocol",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer_token}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscription_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Updated Protocol name\",\r\n    \"description\": \"Protocol description\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/internal/products/{{version}}/protocols/:protocolId",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"internal",
										"products",
										"{{version}}",
										"protocols",
										":protocolId"
									],
									"variable": [
										{
											"key": "protocolId",
											"value": "8af9a232-9043-431d-97e6-9e25e4c6f1e6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Protocol",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer_token}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscription_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/internal/products/{{version}}/protocols/:protocolId",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"internal",
										"products",
										"{{version}}",
										"protocols",
										":protocolId"
									],
									"variable": [
										{
											"key": "protocolId",
											"value": "8af9a232-9043-431d-97e6-9e25e4c6f1e6"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Formats",
					"item": [
						{
							"name": "Create Input Data Format",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer_token}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscription_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"dataFormatCode\": \"input-data-format-code-2\",\r\n    \"description\": \"Description\",\r\n    \"name\": \"Input Data Format\",\r\n    \"ontologyContext\": \"http://example.com\",\r\n    \"type\": \"input\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/internal/products/{{version}}/data-formats",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"internal",
										"products",
										"{{version}}",
										"data-formats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Output Data Format",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"dataFormatCode\": \"output-data-format-code-3\",\r\n    \"description\": \"Description\",\r\n    \"name\": \"Output Data Format\",\r\n    \"ontologyContext\": \"http://example.com\",\r\n    \"type\": \"output\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/data-formats",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"data-formats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Many Data Formats",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/data-formats",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"data-formats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read One Data Format",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/data-formats/:dataFormatId",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"data-formats",
										":dataFormatId"
									],
									"variable": [
										{
											"key": "dataFormatId",
											"value": "ad36d852-2c62-4125-90ba-45f860d45417"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Data Format",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}data-formats/:dataFormatId",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}data-formats",
										":dataFormatId"
									],
									"variable": [
										{
											"key": "dataFormatId",
											"value": "ad36d852-2c62-4125-90ba-45f860d45417"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Data Format",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"Description\",\r\n    \"name\": \"Input Data Format\",\r\n    \"ontologyContext\": \"http://example.com\",\r\n    \"type\": \"input\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/data-formats/:dataFormatId",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"data-formats",
										":dataFormatId"
									],
									"variable": [
										{
											"key": "dataFormatId",
											"value": "ddd71903-0a41-4c90-bfbe-5d07f235ebc8"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Organizations v1 API",
			"item": [
				{
					"name": "Create Organization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Platform of Trust Oy\",\n\t\"registrationCountry\": \"Finland\",\n\t\"idOfficial\": \"2980005-2\",\n\t\"parentOrganizationId\": \"d59c031f-1932-4963-a9c2-a122425ef541\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/organizations/{{version}}",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"organizations",
								"{{version}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Organizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/organizations/{{version}}",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"organizations",
								"{{version}}"
							],
							"query": [
								{
									"key": "offset",
									"value": "",
									"description": "Offset of a query. Value must be 0 and greater.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result of a query. Value must be between 1 and 100.",
									"disabled": true
								},
								{
									"key": "extendOrganizations",
									"value": "",
									"description": "By default, some of the models are included as an id reference in the response. Use this query parameter to include the complete model in the response.",
									"disabled": true
								},
								{
									"key": "q",
									"value": "",
									"description": "The search query to find organization by the name.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Sort the list of products by one or more product properties,taking into account the order that these properties are provided. Allowed values - productCode, type, name, createdAt, updatedAt.",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "",
									"description": "Sort order:  * 'asc' - Ascending  * 'desc' - Descending",
									"disabled": true
								},
								{
									"key": "registrationCountry",
									"value": "",
									"description": "Filter by the registration country.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Organization Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/organizations/{{version}}/{{organizationId}}",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"organizations",
								"{{version}}",
								"{{organizationId}}"
							],
							"query": [
								{
									"key": "extendOrganizations",
									"value": "",
									"description": "By default, some of the models are included as an id reference in the response. Use this query parameter to include the complete model in the response.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Partner Organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/organizations/{{version}}/{{organizationId}}/partners",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"organizations",
								"{{version}}",
								"{{organizationId}}",
								"partners"
							],
							"query": [
								{
									"key": "offset",
									"value": "",
									"description": "Offset of a query. Value must be 0 and greater.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result of a query. Value must be between 1 and 100.",
									"disabled": true
								},
								{
									"key": "q",
									"value": "",
									"description": "The search query to find organization by the name.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Sort the list of products by one or more product properties,taking into account the order that these properties are provided. Allowed values - productCode, type, name, createdAt, updatedAt.",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "",
									"description": "Sort order:  * 'asc' - Ascending  * 'desc' - Descending",
									"disabled": true
								},
								{
									"key": "registrationCountry",
									"value": "",
									"description": "Filter by the registration country.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Organization Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Platform of Trust Oy\",\n\t\"registrationCountry\": \"Finland\",\n\t\"idOfficial\": \"2980005-2\",\n\t\"parentOrganizationId\": \"d59c031f-1932-4963-a9c2-a122425ef541\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/organizations/{{version}}/{{organizationId}}",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"organizations",
								"{{version}}",
								"{{organizationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/organizations/{{version}}/{{organizationId}}",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"organizations",
								"{{version}}",
								"{{organizationId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{bearer_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Users API",
			"item": [
				{
					"name": "Access token",
					"item": [
						{
							"name": "Generate an access token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"authorizationCode\": \"AwABAAAAvPM1KaPlrEqdFSBzjqfTGBCmLdgfSTLEMPGYuNHSUYBrq\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/users/{{version}}/token/generate",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"users",
										"{{version}}",
										"token",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh an access token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"refreshToken\": \"AwABAAAAvPM1KaPlrEqdFSBzjqfTGAMxZGUTdM0t4B4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/users/{{version}}/token/refresh",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"users",
										"{{version}}",
										"token",
										"refresh"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "App Token (Internal)",
					"item": [
						{
							"name": "Create App Token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearer_token}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscription_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/internal/users/{{version}}/:azureAdUserId/app-tokens?appTokenExpirationTime=10000&appToken=both",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"internal",
										"users",
										"{{version}}",
										":azureAdUserId",
										"app-tokens"
									],
									"query": [
										{
											"key": "appTokenExpirationTime",
											"value": "10000"
										},
										{
											"key": "appToken",
											"value": "both"
										}
									],
									"variable": [
										{
											"key": "azureAdUserId",
											"value": "781b08b4-4e67-44a2-9b21-5c5b0aed2fcc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ReadMany App Token",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ilg1ZVhrNHh5b2pORnVtMWtsMll0djhkbE5QNC1jNTdkTzZRR1RWQndhTmsifQ.eyJleHAiOjE2NTI3ODI4NDUsIm5iZiI6MTY1MjY5NjQ0NSwidmVyIjoiMS4wIiwiaXNzIjoiaHR0cHM6Ly9wbGF0Zm9ybW9mdHJ1c3RhcHBzZGV2LmIyY2xvZ2luLmNvbS80ZWRkNTU5Ny1hZTJhLTQxYWEtYThmOS1iYjY1ZWVmYzg3MWMvdjIuMC8iLCJzdWIiOiI5ZmI1NzRkZS1jN2MzLTQ2ZmQtOGIwYy0zYzg5NTMwNWYyYzciLCJhdWQiOiI1Y2NkMGFkNS00MDBjLTRiZjYtYTQyZS1kZmYwNmJiZDcwZGMiLCJub25jZSI6ImRlZmF1bHROb25jZSIsImlhdCI6MTY1MjY5NjQ0NSwiYXV0aF90aW1lIjoxNjUyNjk2NDQ1LCJpc0ZvcmdvdFBhc3N3b3JkIjp0cnVlLCJlbWFpbHMiOlsidmxhZGRAc2JwLXJvbWFuaWEuY29tIl0sIm9pZCI6IjlmYjU3NGRlLWM3YzMtNDZmZC04YjBjLTNjODk1MzA1ZjJjNyIsInRmcCI6IkIyQ18xX0RlZmF1bHQifQ.FPEOEhItMhJ06xxn7Kexox2Tep2cZ2v49_jIjJLLy9LUrVdXPZaES3PErUx6iMSd0WrMd7wbnkL7l3qgWT8b0gatvgQJe6JTSetDUn4MsJRZu_J72N3Xwmxmkzhutky0xIwK7SXx2En4B1rZjS7HjJLvpJM5WPKzzsx6SfVasqYeKw3eygTzzvLxhHfYs18ScWcCo1ZRQLU6Pg58RlLWQtjN1J2pxox3uSeTS_oCG3H8jtOlmz2p0Ugz1IPNvWOzZOXzwBwbQXFss7-0LHf98t0GnTGjFsvKJtzkAC4CqBFlM74N0TY1ba_O1iI0z-ws-xjStasw5R8J0RCtki9kMw",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscription_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/internal/users/{{version}}/:azureAdUserId/app-tokens",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"internal",
										"users",
										"{{version}}",
										":azureAdUserId",
										"app-tokens"
									],
									"variable": [
										{
											"key": "azureAdUserId",
											"value": "781b08b4-4e67-44a2-9b21-5c5b0aed2fcc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke App Token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJsb2NhbGhvc3QiLCJzdWIiOiI3ODFiMDhiNC00ZTY3LTQ0YTItOWIyMS01YzViMGFlZDJmY2MiLCJleHAiOjE2NTIzNTEzNDgsIm5iZiI6MTY1MjM1MTI0OCwiaWF0IjoxNjUyMzUxMjQ4LCJ0eXBlIjoiQXBwIiwidG9rZW5JZCI6IjA5OWE1NzA5LTQzNDYtNDU1Yi1hYTRlLTBiZjA3NDg0M2FmNyJ9.HUrZZmhZ1-BTMPCUtducBhShS04p-qdxdD_GHrLq3eY",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{pot_base_url}}/internal/users/{{version}}/:azureAdUserId/app-tokens/revoke?appToken=primary",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"internal",
										"users",
										"{{version}}",
										":azureAdUserId",
										"app-tokens",
										"revoke"
									],
									"query": [
										{
											"key": "appToken",
											"value": "primary"
										}
									],
									"variable": [
										{
											"key": "azureAdUserId",
											"value": "781b08b4-4e67-44a2-9b21-5c5b0aed2fcc"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/users/{{version}}",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"users",
								"{{version}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result of a query. Value must be between 1 and 100.",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"description": "Offset of a query. Value must be 0 and greater.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Sort users by one or more user properties,taking into account the order that these properties are provided. Allowed values - displayName, createdAt",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "",
									"description": "Sort order:  * 'asc' - Ascending  * 'desc' - Descending",
									"disabled": true
								},
								{
									"key": "searchBy",
									"value": "",
									"description": "Search users by allowed attributes. Must be used in pair with searchValue query.",
									"disabled": true
								},
								{
									"key": "searchValue",
									"value": "",
									"description": "Search value for the wanted attribute. Must be used in pair with searchBy query.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/users/{{version}}/:azureAdUserId",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"users",
								"{{version}}",
								":azureAdUserId"
							],
							"variable": [
								{
									"key": "azureAdUserId",
									"value": "",
									"description": "Unique identifier for the user in the Microsoft Graph API."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"Teppo Admin\",\n\t\"email\": \"teppo.admin@example.com\",\n\t\"currentOrganizationId\": \"bf117419-b299-443e-b446-f4c0e04b235c\",\n\t\"parentOrganizationId\": \"d59c031f-1932-4963-a9c2-a122425ef541\",\n\t\"accountEnabled\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/users/{{version}}/:azureAdUserId",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"users",
								"{{version}}",
								":azureAdUserId"
							],
							"variable": [
								{
									"key": "azureAdUserId",
									"value": "",
									"description": "Unique identifier for the user in the Microsoft Graph API."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/users/{{version}}/:azureAdUserId",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"users",
								"{{version}}",
								":azureAdUserId"
							],
							"variable": [
								{
									"key": "azureAdUserId",
									"value": "",
									"description": "Unique identifier for the user in the Microsoft Graph API."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get account status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/users/{{version}}/:azureAdUserId/status",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"users",
								"{{version}}",
								":azureAdUserId",
								"status"
							],
							"variable": [
								{
									"key": "azureAdUserId",
									"value": "test",
									"description": "Unique identifier for the user in the Microsoft Graph API."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update account status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"accountEnabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pot_base_url}}/users/{{version}}/:azureAdUserId/status",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"users",
								"{{version}}",
								":azureAdUserId",
								"status"
							],
							"variable": [
								{
									"key": "azureAdUserId",
									"value": "test",
									"description": "Unique identifier for the user in the Microsoft Graph API."
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Develop",
			"item": [
				{
					"name": "pi8-s1",
					"item": [
						{
							"name": "List all condition types supported by the system",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/product-condition-types",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"product-condition-types"
									],
									"query": [
										{
											"key": "type",
											"value": "text, valueset, geographical, consent",
											"description": "(Optional) The type of conditions to be returned: text, valueset, geographical, consent (can be used in any combination)- valueset: Returns the conditions that have the valueSet option set to 'true'- geographical: Returns the conditions that have the geographicalLimitation option set to 'true'- consent: Returns the conditions that have the consent option set to 'true'- text: Returns the conditions that have all of the other options set to 'false'     ",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create condition type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Consent\",\n\t\"conditionTypeDescription\": {\n\t\t\"formatType\": \"plaintext\",\n\t\t\"content\": \"Condition type used create permission request flow\"\n\t},\n\t\"valueSet\": {\n\t\t\"supported\": false\n\t},\n\t\"geographicalLimitation\": {\n\t\t\"supported\": false\n\t},\n\t\"consent\": {\n\t\t\"required\": true,\n\t\t\"channels\": [\n\t\t\t\"platformoftrust\",\n\t\t\t\"mydatashare\",\n\t\t\t\"signspace\"\n\t\t],\n\t\t\"partyRoles\": [\n\t\t\t\"datapublisher\",\n\t\t\t\"datasubject\"\n\t\t],\n\t\t\"exceptionTypes\": [\n\t\t\t\"partners-all\",\n\t\t\t\"organizations-selected\"\n\t\t]\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/product-condition-types",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										"product-condition-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "List all conditions for the current data product Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"conditions"
									],
									"query": [
										{
											"key": "extendModels",
											"value": "<string>",
											"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
											"disabled": true
										},
										{
											"key": "type",
											"value": "text, valueset, geographical, consent",
											"description": "(Optional) The type of conditions to be returned: text, valueset, geographical, consent (can be used in any combination)- valueset: Returns the conditions that have the valueSet option set to 'true'- geographical: Returns the conditions that have the geographicalLimitation option set to 'true'- consent: Returns the conditions that have the consent option set to 'true'- text: Returns the conditions that have all of the other options set to 'false'     ",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "productCode",
											"value": "{{product_code}}",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create condition for the current data product",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"contractId\": \"dbf32426-cf38-4818-9c6e-3230d889fa51\",\n\t\"productConditionTypeId\": \"6d3ee8a0-3a3f-4017-a0f5-868ab07e278b\",\n\t\"valueSet\": {\n\t\t\"supported\": true,\n\t\t\"selectedValuePath\": \"2.4.1.2.2\",\n\t\t\"customValue\": \"test string\"\n\t},\n\t\"geographicalLimitation\": {\n\t\t\"supported\": false\n\t},\n\t\"consent\": {\n\t\t\"required\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions",
									"host": [
										"{{pot_base_url}}"
									],
									"path": [
										"products",
										"{{version}}",
										":productCode",
										"conditions"
									],
									"variable": [
										{
											"key": "productCode",
											"value": "{{product_code}}",
											"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "pi8-s3",
					"item": [
						{
							"name": "Condition Groups",
							"item": [
								{
									"name": "List all available condition groups",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "extendModels",
												"value": "",
												"description": "By default some of the models are included as an id or product code reference in the endpoint response. Use this query parameter to include the complete extended models in the response.",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-groups",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create condition group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Contracting parties\",\n\t\"agreementSection\": 1,\n\t\"mandatoryGroup\": true,\n\t\"description\": \"description\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-groups",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get condition group details",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-groups/:conditionGroupId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-groups",
												":conditionGroupId"
											],
											"variable": [
												{
													"key": "conditionGroupId",
													"value": "uuid",
													"description": "Internal identifier of the condition group. UUID format."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update condition group details",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Contracting parties\",\n\t\"agreementSection\": 1,\n\t\"mandatoryGroup\": true,\n\t\"description\": \"description\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-groups/:conditionGroupId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-groups",
												":conditionGroupId"
											],
											"variable": [
												{
													"key": "conditionGroupId",
													"value": "uuid",
													"description": "Internal identifier of the condition group. UUID format."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete condition group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-groups/:conditionGroupId",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-groups",
												":conditionGroupId"
											],
											"variable": [
												{
													"key": "conditionGroupId",
													"value": "uuid",
													"description": "Internal identifier of the condition group. UUID format."
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Condition Types",
							"item": [
								{
									"name": "List all condition types supported by the system",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-types",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-types"
											],
											"query": [
												{
													"key": "type",
													"value": "text, valueset, geographical, consent",
													"description": "The type of conditions to be returned: text, valueset, geographical, consent (can be used in any combination)- valueset: Returns the conditions that have the valueSet option set to 'true'- geographical: Returns the conditions that have the geographicalLimitation option set to 'true'- consent: Returns the conditions that have the consent option set to 'true'- text: Returns the conditions that have all of the other options set to 'false'     ",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create condition type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Resale Price\",\n\t\"section\": \"2021-05-03T00:00:00Z\",\n\t\"propertyType\": \"slider\",\n\t\"conditionTypeDescription\": {\n\t\t\"formatType\": \"plaintext\",\n\t\t\"content\": \"Does the Licensor ask for price when the Licensee is reselling the Modified Data.\"\n\t},\n\t\"conditionContractText\": {\n\t\t\"formatType\": \"html\",\n\t\t\"content\": \"5.3 The standard resale price for the Modified Data are: <[valueSetPlaceholder]>\"\n\t},\n\t\"geographicalLimitation\": {\n\t\t\"supported\": false\n\t},\n\t\"consent\": {\n\t\t\"required\": false\n\t},\n\t\"valueSet\": {\n\t\t\"supported\": true,\n\t\t\"values\": [\n\t\t\t{\n\t\t\t\t\"name\": \"No\",\n\t\t\t\t\"path\": \"1\",\n\t\t\t\t\"contractText\": {\n\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\"content\": \"Resale is not allowed\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Yes\",\n\t\t\t\t\"path\": \"2\",\n\t\t\t\t\"subValues\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"One-off payment\",\n\t\t\t\t\t\t\"path\": \"2021-02-01T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"Lump sum of <[customValuePlaceholder]>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"continuous monthly subscription fee\",\n\t\t\t\t\t\t\"path\": \"2021-02-02T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"Monthly subscription License Fees of <[customValuePlaceholder]>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"Annual subscription fee\",\n\t\t\t\t\t\t\"path\": \"2021-02-03T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"annual subscription License Fees of <[customValuePlaceholder]>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"License fees based on the users / data products\",\n\t\t\t\t\t\t\"path\": \"2021-02-04T00:00:00Z\",\n\t\t\t\t\t\t\"subValues\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"Subscription period\",\n\t\t\t\t\t\t\t\t\"path\": \"2001-02-04T00:00:00Z\",\n\t\t\t\t\t\t\t\t\"subValues\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Monthly\",\n\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.1\",\n\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\"subValues\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Users\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.1.1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"content\": \"Monthly subscription License Fees of <[customValuePlaceholder]> per Users\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Data Products\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.1.2\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"content\": \"Monthly subscription License Fees of <[customValuePlaceholder]> per Data Products\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Annual\",\n\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.2\",\n\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\"subValues\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Users\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.2.1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"content\": \"annual subscription License Fees of <[customValuePlaceholder]> per Users\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Data Products\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.2.2\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"content\": \"annual subscription License Fees of <[customValuePlaceholder]> per Data Products\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"Revenue Share\",\n\t\t\t\t\t\t\"path\": \"2021-02-05T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"<[customValuePlaceholder]> percent (%) of the net income of the sales of the Modified Data.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"Other\",\n\t\t\t\t\t\t\"path\": \"2021-02-06T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"<[customValuePlaceholder]>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"text\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"conditionGroupId\": \"5896c8fa-42e0-11ec-81d3-0242ac130003\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-types",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-types"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get one condition type by id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-types/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-types",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the condition type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update condition type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Resale Price\",\n\t\"section\": \"2021-05-03T00:00:00Z\",\n\t\"propertyType\": \"slider\",\n\t\"conditionTypeDescription\": {\n\t\t\"formatType\": \"plaintext\",\n\t\t\"content\": \"Does the Licensor ask for price when the Licensee is reselling the Modified Data.\"\n\t},\n\t\"conditionContractText\": {\n\t\t\"formatType\": \"html\",\n\t\t\"content\": \"5.3 The standard resale price for the Modified Data are: <[valueSetPlaceholder]>\"\n\t},\n\t\"geographicalLimitation\": {\n\t\t\"supported\": false\n\t},\n\t\"consent\": {\n\t\t\"required\": false\n\t},\n\t\"valueSet\": {\n\t\t\"supported\": true,\n\t\t\"values\": [\n\t\t\t{\n\t\t\t\t\"name\": \"No\",\n\t\t\t\t\"path\": \"1\",\n\t\t\t\t\"contractText\": {\n\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\"content\": \"Resale is not allowed\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Yes\",\n\t\t\t\t\"path\": \"2\",\n\t\t\t\t\"subValues\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"One-off payment\",\n\t\t\t\t\t\t\"path\": \"2021-02-01T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"Lump sum of <[customValuePlaceholder]>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"continuous monthly subscription fee\",\n\t\t\t\t\t\t\"path\": \"2021-02-02T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"Monthly subscription License Fees of <[customValuePlaceholder]>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"Annual subscription fee\",\n\t\t\t\t\t\t\"path\": \"2021-02-03T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"annual subscription License Fees of <[customValuePlaceholder]>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"License fees based on the users / data products\",\n\t\t\t\t\t\t\"path\": \"2021-02-04T00:00:00Z\",\n\t\t\t\t\t\t\"subValues\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"Subscription period\",\n\t\t\t\t\t\t\t\t\"path\": \"2001-02-04T00:00:00Z\",\n\t\t\t\t\t\t\t\t\"subValues\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Monthly\",\n\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.1\",\n\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\"subValues\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Users\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.1.1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"content\": \"Monthly subscription License Fees of <[customValuePlaceholder]> per Users\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Data Products\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.1.2\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"content\": \"Monthly subscription License Fees of <[customValuePlaceholder]> per Data Products\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Annual\",\n\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.2\",\n\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\"subValues\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Users\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.2.1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"content\": \"annual subscription License Fees of <[customValuePlaceholder]> per Users\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Data Products\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"path\": \"2.4.1.2.2\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"content\": \"annual subscription License Fees of <[customValuePlaceholder]> per Data Products\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"Revenue Share\",\n\t\t\t\t\t\t\"path\": \"2021-02-05T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"<[customValuePlaceholder]> percent (%) of the net income of the sales of the Modified Data.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"number\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"Other\",\n\t\t\t\t\t\t\"path\": \"2021-02-06T00:00:00Z\",\n\t\t\t\t\t\t\"contractText\": {\n\t\t\t\t\t\t\t\"formatType\": \"html\",\n\t\t\t\t\t\t\t\"content\": \"<[customValuePlaceholder]>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customValueType\": \"text\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"conditionGroupId\": \"5896c8fa-42e0-11ec-81d3-0242ac130003\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-types/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-types",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the condition type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete condition type",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/product-license/condition-types/:id",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												"product-license",
												"condition-types",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Internal identifier of the condition type"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Conditions for the products",
							"item": [
								{
									"name": "List all conditions for the current data product Copy",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/conditions",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"conditions"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "{{product_code}}",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List all condition groups for the product",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearer_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pot_base_url}}/products/{{version}}/:productCode/condition-groups",
											"host": [
												"{{pot_base_url}}"
											],
											"path": [
												"products",
												"{{version}}",
												":productCode",
												"condition-groups"
											],
											"query": [
												{
													"key": "extendModels",
													"value": "<string>",
													"description": "(Optional) By default the conditions and condition types are included as an id reference in the endpoint response. Use this query parameter to include the complete extended models in the response. (condition, condition-type)",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "productCode",
													"value": "{{product_code}}",
													"description": "(Required) Product code is a unique identifier used to invoke a particular data product. Must not contain spaces."
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Insights - Internal",
			"item": [
				{
					"name": "List overall product statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}/products",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"internal",
								"{{api}}",
								"{{version}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "List products with statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}/products/{{productType}}",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"internal",
								"{{api}}",
								"{{version}}",
								"products",
								"{{productType}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get product statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}/products/{{productType}}/{{product_id}}",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"internal",
								"{{api}}",
								"{{version}}",
								"products",
								"{{productType}}",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List overall customer statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pot_base_url}}/internal/{{api}}/{{version}}/customers",
							"host": [
								"{{pot_base_url}}"
							],
							"path": [
								"internal",
								"{{api}}",
								"{{version}}",
								"customers"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}